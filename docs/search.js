window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"debeir": {"fullname": "debeir", "modulename": "debeir", "type": "module", "doc": "<p>The NIR (Neural Index Ranker) source code library.</p>\n\n<p>See ./main.py in the parent directory for an out-of-the-box runnable code.</p>\n\n<p>Otherwise, check out notebooks in the parent directory for training your own model amongst other things.</p>\n"}, "debeir.data_sets": {"fullname": "debeir.data_sets", "modulename": "debeir.data_sets", "type": "module", "doc": "<p>Contains data_sets implemented from nir.interfaces</p>\n\n<ol>\n<li>Parser (For reading data from files into a Dict object)</li>\n<li>Query object (Generating queries)\n<ul>\n<li>These query objects can be very lightweight containing only the mappings of the index.</li>\n</ul></li>\n</ol>\n"}, "debeir.data_sets.bioreddit": {"fullname": "debeir.data_sets.bioreddit", "modulename": "debeir.data_sets.bioreddit", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"fullname": "debeir.data_sets.bioreddit.BioRedditSubmissionParser", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditSubmissionParser", "type": "class", "doc": "<p>Parser for the BioReddit Submission Dataset</p>\n", "bases": "debeir.interfaces.parser.CSVParser"}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"fullname": "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditSubmissionParser.get_topics", "type": "function", "doc": "<p>Instance method for getting topics, forwards instance self parameters to the _get_topics class method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">csvfile</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"fullname": "debeir.data_sets.bioreddit.BioRedditCommentParser", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditCommentParser", "type": "class", "doc": "<p>Parser for the BioReddit Comment Dataset</p>\n", "bases": "debeir.interfaces.parser.CSVParser"}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"fullname": "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditCommentParser.get_topics", "type": "function", "doc": "<p>Instance method for getting topics, forwards instance self parameters to the _get_topics class method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">csvfile</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"fullname": "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditElasticsearchQuery", "type": "class", "doc": "<p>Elasticsearch Query object for the BioReddit</p>\n", "bases": "debeir.interfaces.query.GenericElasticsearchQuery"}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"fullname": "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__", "modulename": "debeir.data_sets.bioreddit", "qualname": "BioRedditElasticsearchQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">topics</span>, </span><span class=\"param\"><span class=\"n\">config</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.clinical_trials": {"fullname": "debeir.data_sets.clinical_trials", "modulename": "debeir.data_sets.clinical_trials", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"fullname": "debeir.data_sets.clinical_trials.TrialsQueryConfig", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsQueryConfig", "type": "class", "doc": "<p></p>\n", "bases": "debeir.interfaces.config.GenericConfig"}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"fullname": "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsQueryConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ablations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">automatic</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_fp</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parser_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">executor_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite_output_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">run_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_field_usage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embed_field_usage</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"fullname": "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsQueryConfig.validate", "type": "function", "doc": "<p>Checks if query type is included, and checks if an encoder is included for embedding queries</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"fullname": "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsQueryConfig.from_toml", "type": "function", "doc": "<p>Instantiates a Config object from a toml file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fp</strong>:  File path of the Config TOML file</li>\n<li><strong>field_class</strong>:  Class of the Config object to be instantiated</li>\n<li><strong>args</strong>:  Arguments to be passed to Config</li>\n<li><strong>kwargs</strong>:  Keyword arguments to be passed</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A instantiated and validated Config object.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"fullname": "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsQueryConfig.from_dict", "type": "function", "doc": "<p>Instantiates a Config object from a dictionary</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_class</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery", "type": "class", "doc": "<p>Elasticsearch Query object for the Clinical Trials Index</p>\n", "bases": "debeir.interfaces.query.GenericElasticsearchQuery"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">topics</span>, </span><span class=\"param\"><span class=\"n\">query_type</span>, </span><span class=\"param\"><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.generate_query", "type": "function", "doc": "<p>Generates a query for the clinical trials index</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>:  Topic number to search</li>\n<li><strong>query_field_usage</strong>:  Which document facets to search over</li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A basic elasticsearch query for clinical trials\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.generate_query_ablation", "type": "function", "doc": "<p>Only search one document facet at a time</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic_num</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.generate_query_embedding", "type": "function", "doc": "<p>Computes the NIR score for a given topic</p>\n\n<p>Score = log(BM25)/log(norm_weight) + embedding_score</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n<li><strong>encoder</strong>: </li>\n<li><strong>query_field_usage</strong>: </li>\n<li><strong>embed_field_usage</strong>: </li>\n<li><strong>cosine_weights</strong>: </li>\n<li><strong>query_weight</strong>: </li>\n<li><strong>norm_weight</strong>: </li>\n<li><strong>ablations</strong>: </li>\n<li><strong>automatic_scores</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.get_query_type", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"fullname": "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping", "modulename": "debeir.data_sets.clinical_trials", "qualname": "TrialsElasticsearchQuery.get_id_mapping", "type": "function", "doc": "<p>Get the document ID</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hit</strong>:  The raw document result</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>The document's ID\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">hit</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"fullname": "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor", "modulename": "debeir.data_sets.clinical_trials", "qualname": "ClinicalTrialsElasticsearchExecutor", "type": "class", "doc": "<p>Executes queries given a query object.</p>\n", "bases": "debeir.interfaces.executor.GenericElasticsearchExecutor"}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"fullname": "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__", "modulename": "debeir.data_sets.clinical_trials", "qualname": "ClinicalTrialsElasticsearchExecutor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span>,</span><span class=\"param\">\t<span class=\"n\">index_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">clinical_trials</span><span class=\"o\">.</span><span class=\"n\">TrialsElasticsearchQuery</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"fullname": "debeir.data_sets.clinical_trials.ClinicalTrialParser", "modulename": "debeir.data_sets.clinical_trials", "qualname": "ClinicalTrialParser", "type": "class", "doc": "<p>Parser for Clinical Trials topics</p>\n", "bases": "debeir.interfaces.parser.Parser"}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"fullname": "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__", "modulename": "debeir.data_sets.clinical_trials", "qualname": "ClinicalTrialParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"fullname": "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics", "modulename": "debeir.data_sets.clinical_trials", "qualname": "ClinicalTrialParser.get_topics", "type": "function", "doc": "<p>Instance method for getting topics, forwards instance self parameters to the _get_topics class method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">csvfile</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.factory": {"fullname": "debeir.data_sets.factory", "modulename": "debeir.data_sets.factory", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.factory.get_index_name": {"fullname": "debeir.data_sets.factory.get_index_name", "modulename": "debeir.data_sets.factory", "qualname": "get_index_name", "type": "function", "doc": "<p>Get the index name from the config without parsing as a TOML</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config_fp</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_fp</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.factory.factory_fn": {"fullname": "debeir.data_sets.factory.factory_fn", "modulename": "debeir.data_sets.factory", "qualname": "factory_fn", "type": "function", "doc": "<p>Factory method for creating the parsed topics, config object, query object and query executor object</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config_fp</strong>:  Config file path</li>\n<li><strong>index</strong>:  Index to search</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Query, Config, Parser, Executor, Evaluator\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config_fp</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> (&lt;class &#x27;debeir.interfaces.query.Query&#x27;&gt;, &lt;class &#x27;debeir.interfaces.config.GenericConfig&#x27;&gt;, &lt;class &#x27;debeir.interfaces.parser.Parser&#x27;&gt;, &lt;class &#x27;debeir.interfaces.executor.GenericElasticsearchExecutor&#x27;&gt;, &lt;class &#x27;debeir.evaluation.evaluator.Evaluator&#x27;&gt;):</span></span>", "funcdef": "def"}, "debeir.data_sets.factory.config_factory": {"fullname": "debeir.data_sets.factory.config_factory", "modulename": "debeir.data_sets.factory", "qualname": "config_factory", "type": "function", "doc": "<p>Factory method for creating configs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong>:  Config path</li>\n<li><strong>config_cls</strong>:  Config class to instantiate</li>\n<li><strong>args_dict</strong>:  Arguments to consider</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A config object\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">args_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.factory.get_nir_config": {"fullname": "debeir.data_sets.factory.get_nir_config", "modulename": "debeir.data_sets.factory", "qualname": "get_nir_config", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nir_config</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">ignore_errors</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.factory.apply_nir_config": {"fullname": "debeir.data_sets.factory.apply_nir_config", "modulename": "debeir.data_sets.factory", "qualname": "apply_nir_config", "type": "function", "doc": "<p>Decorator that applies the NIR config settings to the current function\nReplaces arguments and keywords arguments with those found in the config</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.marco": {"fullname": "debeir.data_sets.marco", "modulename": "debeir.data_sets.marco", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"fullname": "debeir.data_sets.marco.MarcoElasticsearchExecutor", "modulename": "debeir.data_sets.marco", "qualname": "MarcoElasticsearchExecutor", "type": "class", "doc": "<p>Generic Executor class for Elasticsearch</p>\n", "bases": "debeir.interfaces.executor.GenericElasticsearchExecutor"}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"fullname": "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__", "modulename": "debeir.data_sets.marco", "qualname": "MarcoElasticsearchExecutor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span>,</span><span class=\"param\">\t<span class=\"n\">index_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GenericElasticsearchQuery</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"fullname": "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query", "modulename": "debeir.data_sets.marco", "qualname": "MarcoElasticsearchExecutor.generate_query", "type": "function", "doc": "<p>Generates a standard BM25 query given the topic number</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>:  Query topic number to generate</li>\n<li><strong>best_fields</strong>:  Whether to use a curated list of fields</li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic_num</span>, </span><span class=\"param\"><span class=\"n\">best_fields</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"fullname": "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query", "modulename": "debeir.data_sets.marco", "qualname": "MarcoElasticsearchExecutor.generate_embedding_query", "type": "function", "doc": "<p>Executes an NIR-style query with combined scoring.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n<li><strong>cosine_weights</strong>: </li>\n<li><strong>query_weights</strong>: </li>\n<li><strong>norm_weight</strong>: </li>\n<li><strong>automatic_scores</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic_num</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"o\">=</span><span class=\"mf\">2.15</span>,</span><span class=\"param\">\t<span class=\"n\">automatic_scores</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"fullname": "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query", "modulename": "debeir.data_sets.marco", "qualname": "MarcoElasticsearchExecutor.execute_query", "type": "function", "doc": "<p>Execute a query given parameters</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topic_num</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ablation</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;query&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.data_sets.marco.MarcoQueryConfig": {"fullname": "debeir.data_sets.marco.MarcoQueryConfig", "modulename": "debeir.data_sets.marco", "qualname": "MarcoQueryConfig", "type": "class", "doc": "<p></p>\n", "bases": "debeir.interfaces.config.GenericConfig"}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"fullname": "debeir.data_sets.marco.MarcoQueryConfig.__init__", "modulename": "debeir.data_sets.marco", "qualname": "MarcoQueryConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ablations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">automatic</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_fp</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parser_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">executor_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite_output_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">run_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"fullname": "debeir.data_sets.marco.MarcoQueryConfig.validate", "modulename": "debeir.data_sets.marco", "qualname": "MarcoQueryConfig.validate", "type": "function", "doc": "<p>Validates if the config is correct.\nMust be implemented by inherited classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"fullname": "debeir.data_sets.marco.MarcoQueryConfig.from_toml", "modulename": "debeir.data_sets.marco", "qualname": "MarcoQueryConfig.from_toml", "type": "function", "doc": "<p>Instantiates a Config object from a toml file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fp</strong>:  File path of the Config TOML file</li>\n<li><strong>field_class</strong>:  Class of the Config object to be instantiated</li>\n<li><strong>args</strong>:  Arguments to be passed to Config</li>\n<li><strong>kwargs</strong>:  Keyword arguments to be passed</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A instantiated and validated Config object.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">marco</span><span class=\"o\">.</span><span class=\"n\">MarcoQueryConfig</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"fullname": "debeir.data_sets.marco.MarcoQueryConfig.from_dict", "modulename": "debeir.data_sets.marco", "qualname": "MarcoQueryConfig.from_dict", "type": "function", "doc": "<p>Instantiates a Config object from a dictionary</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_class</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">marco</span><span class=\"o\">.</span><span class=\"n\">MarcoQueryConfig</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.trec_clinical_trials": {"fullname": "debeir.data_sets.trec_clinical_trials", "modulename": "debeir.data_sets.trec_clinical_trials", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"fullname": "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser", "modulename": "debeir.data_sets.trec_clinical_trials", "qualname": "TREClinicalTrialDocumentParser", "type": "class", "doc": "<p>Parser for Clinical Trials topics</p>\n", "bases": "debeir.interfaces.parser.XMLParser"}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"fullname": "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract", "modulename": "debeir.data_sets.trec_clinical_trials", "qualname": "TREClinicalTrialDocumentParser.extract", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"fullname": "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery", "modulename": "debeir.data_sets.trec_clinical_trials", "qualname": "TrecClincialElasticsearchQuery", "type": "class", "doc": "<p>A generic elasticsearch query. Contains methods for NIR-style (embedding) queries and normal BM25 queries.\nRequires topics, configs to be included</p>\n", "bases": "debeir.interfaces.query.GenericElasticsearchQuery"}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"fullname": "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__", "modulename": "debeir.data_sets.trec_clinical_trials", "qualname": "TrecClincialElasticsearchQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">topics</span>, </span><span class=\"param\"><span class=\"n\">config</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.trec_covid": {"fullname": "debeir.data_sets.trec_covid", "modulename": "debeir.data_sets.trec_covid", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.trec_covid.TrecCovidParser": {"fullname": "debeir.data_sets.trec_covid.TrecCovidParser", "modulename": "debeir.data_sets.trec_covid", "qualname": "TrecCovidParser", "type": "class", "doc": "<p>Load topics from an XML file</p>\n", "bases": "debeir.interfaces.parser.XMLParser"}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"fullname": "debeir.data_sets.trec_covid.TrecCovidParser.get_topics", "modulename": "debeir.data_sets.trec_covid", "qualname": "TrecCovidParser.get_topics", "type": "function", "doc": "<p>Instance method for getting topics, forwards instance self parameters to the _get_topics class method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">xmlfile</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"fullname": "debeir.data_sets.trec_covid.TrecElasticsearchQuery", "modulename": "debeir.data_sets.trec_covid", "qualname": "TrecElasticsearchQuery", "type": "class", "doc": "<p>A generic elasticsearch query. Contains methods for NIR-style (embedding) queries and normal BM25 queries.\nRequires topics, configs to be included</p>\n", "bases": "debeir.interfaces.query.GenericElasticsearchQuery"}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"fullname": "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__", "modulename": "debeir.data_sets.trec_covid", "qualname": "TrecElasticsearchQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">topics</span>, </span><span class=\"param\"><span class=\"n\">config</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.types": {"fullname": "debeir.data_sets.types", "modulename": "debeir.data_sets.types", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.types.InputExample": {"fullname": "debeir.data_sets.types.InputExample", "modulename": "debeir.data_sets.types", "qualname": "InputExample", "type": "class", "doc": "<p>Copied from Sentence Transformer Library\nStructure for one input example with texts, the label and a unique id</p>\n"}, "debeir.data_sets.types.InputExample.__init__": {"fullname": "debeir.data_sets.types.InputExample.__init__", "modulename": "debeir.data_sets.types", "qualname": "InputExample.__init__", "type": "function", "doc": "<p>Creates one InputExample with the given texts, guid and label</p>\n\n<p>:param guid\n    id for the example\n:param texts\n    the texts for the example. Note, str.strip() is called on the texts\n:param label\n    the label for the example</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">guid</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">texts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">label</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, "debeir.data_sets.types.InputExample.get_label": {"fullname": "debeir.data_sets.types.InputExample.get_label", "modulename": "debeir.data_sets.types", "qualname": "InputExample.get_label", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.types.InputExample.to_dict": {"fullname": "debeir.data_sets.types.InputExample.to_dict", "modulename": "debeir.data_sets.types", "qualname": "InputExample.to_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputExample</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.types.InputExample.from_parser_output": {"fullname": "debeir.data_sets.types.InputExample.from_parser_output", "modulename": "debeir.data_sets.types", "qualname": "InputExample.from_parser_output", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.types.RelevanceExample": {"fullname": "debeir.data_sets.types.RelevanceExample", "modulename": "debeir.data_sets.types", "qualname": "RelevanceExample", "type": "class", "doc": "<p>Converts Relevance Labels to 0 - 1</p>\n", "bases": "InputExample"}, "debeir.data_sets.types.RelevanceExample.__init__": {"fullname": "debeir.data_sets.types.RelevanceExample.__init__", "modulename": "debeir.data_sets.types", "qualname": "RelevanceExample.__init__", "type": "function", "doc": "<p>Creates one InputExample with the given texts, guid and label</p>\n\n<p>:param guid\n    id for the example\n:param texts\n    the texts for the example. Note, str.strip() is called on the texts\n:param label\n    the label for the example</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_score</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.data_sets.types.RelevanceExample.get_label": {"fullname": "debeir.data_sets.types.RelevanceExample.get_label", "modulename": "debeir.data_sets.types", "qualname": "RelevanceExample.get_label", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.types.RelevanceExample.relevance": {"fullname": "debeir.data_sets.types.RelevanceExample.relevance", "modulename": "debeir.data_sets.types", "qualname": "RelevanceExample.relevance", "type": "function", "doc": "<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns a normalised score for relevance between 0 - 1\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.data_sets.types.DatasetTypes": {"fullname": "debeir.data_sets.types.DatasetTypes", "modulename": "debeir.data_sets.types", "qualname": "DatasetTypes", "type": "class", "doc": "<p>A collection of common dataset types that is usable in the library.</p>\n", "bases": "enum.Enum"}, "debeir.data_sets.utils": {"fullname": "debeir.data_sets.utils", "modulename": "debeir.data_sets.utils", "type": "module", "doc": "<p></p>\n"}, "debeir.data_sets.utils.CrossValidatorDataset": {"fullname": "debeir.data_sets.utils.CrossValidatorDataset", "modulename": "debeir.data_sets.utils", "qualname": "CrossValidatorDataset", "type": "class", "doc": "<p>Cross Validator Dataset</p>\n"}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"fullname": "debeir.data_sets.utils.CrossValidatorDataset.__init__", "modulename": "debeir.data_sets.utils", "qualname": "CrossValidatorDataset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">cross_validator</span>, </span><span class=\"param\"><span class=\"n\">n_folds</span>, </span><span class=\"param\"><span class=\"n\">x_attr</span><span class=\"o\">=</span><span class=\"s1\">&#39;text&#39;</span>, </span><span class=\"param\"><span class=\"n\">y_attr</span><span class=\"o\">=</span><span class=\"s1\">&#39;label&#39;</span></span>)</span>"}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"fullname": "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator", "modulename": "debeir.data_sets.utils", "qualname": "CrossValidatorDataset.prepare_cross_validator", "type": "function", "doc": "<p>Prepare the cross validator dataset object that will internally produce the folds.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong>:  Dataset to be used. Should be a list of dicts, or list of [x,y] or a Dataset object from data_sets</li>\n<li><strong>evaluator</strong>:  Evaluator to use for checking results</li>\n<li><strong>n_splits</strong>:  Number of cross validation splits, k-fold (stratified)</li>\n<li><strong>seed</strong>:  Seed to use (default 42)</li>\n<li><strong>y_attr</strong>:  Label, or idx of the y label</li>\n<li><strong>x_attr</strong>:  Label or idx of the x label (not directly used)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">evaluation</span><span class=\"o\">.</span><span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">Evaluator</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">x_attr</span>,</span><span class=\"param\">\t<span class=\"n\">y_attr</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">42</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">CrossValidatorDataset</span>:</span></span>", "funcdef": "def"}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"fullname": "debeir.data_sets.utils.CrossValidatorDataset.get_fold", "modulename": "debeir.data_sets.utils", "qualname": "CrossValidatorDataset.get_fold", "type": "function", "doc": "<p>Get the fold and returns a dataset.DataDict object with\nDataDict{'train': ..., 'val': ...}</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>idx</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span></span><span class=\"return-annotation\">) -> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">dataset_dict</span><span class=\"o\">.</span><span class=\"n\">DatasetDict</span>:</span></span>", "funcdef": "def"}, "debeir.engines": {"fullname": "debeir.engines", "modulename": "debeir.engines", "type": "module", "doc": "<p>Implemented Search Engines to run queries against.</p>\n"}, "debeir.engines.client": {"fullname": "debeir.engines.client", "modulename": "debeir.engines.client", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.client.Client": {"fullname": "debeir.engines.client.Client", "modulename": "debeir.engines.client", "qualname": "Client", "type": "class", "doc": "<p>Overarching client interface object that contains references to different clients for search\nAllows sharing between function calls</p>\n"}, "debeir.engines.client.Client.__init__": {"fullname": "debeir.engines.client.Client.__init__", "modulename": "debeir.engines.client", "qualname": "Client.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">es_client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">solr_client</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">generic_client</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.engines.client.Client.build_from_config": {"fullname": "debeir.engines.client.Client.build_from_config", "modulename": "debeir.engines.client", "qualname": "Client.build_from_config", "type": "function", "doc": "<p>Build client from engine config</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>engine_type</strong>: </li>\n<li><strong>engine_config</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">engine_type</span>, </span><span class=\"param\"><span class=\"n\">engine_config</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">Client</span>:</span></span>", "funcdef": "def"}, "debeir.engines.client.Client.get_client": {"fullname": "debeir.engines.client.Client.get_client", "modulename": "debeir.engines.client", "qualname": "Client.get_client", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">engine</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.client.Client.close": {"fullname": "debeir.engines.client.Client.close", "modulename": "debeir.engines.client", "qualname": "Client.close", "type": "function", "doc": "<p>Generically close all contained client objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.engines.dummyindex": {"fullname": "debeir.engines.dummyindex", "modulename": "debeir.engines.dummyindex", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.dummyindex.index": {"fullname": "debeir.engines.dummyindex.index", "modulename": "debeir.engines.dummyindex.index", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.dummyindex.index.DummyIndex": {"fullname": "debeir.engines.dummyindex.index.DummyIndex", "modulename": "debeir.engines.dummyindex.index", "qualname": "DummyIndex", "type": "class", "doc": "<p></p>\n"}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"fullname": "debeir.engines.dummyindex.index.DummyIndex.__init__", "modulename": "debeir.engines.dummyindex.index", "qualname": "DummyIndex.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"fullname": "debeir.engines.dummyindex.index.DummyIndex.get_documents", "modulename": "debeir.engines.dummyindex.index", "qualname": "DummyIndex.get_documents", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.dummyindex.index.DummyIndex.query": {"fullname": "debeir.engines.dummyindex.index.DummyIndex.query", "modulename": "debeir.engines.dummyindex.index", "qualname": "DummyIndex.query", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"fullname": "debeir.engines.dummyindex.index.DummyIndex.scorer", "modulename": "debeir.engines.dummyindex.index", "qualname": "DummyIndex.scorer", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.dummyindex.index.es_isup": {"fullname": "debeir.engines.dummyindex.index.es_isup", "modulename": "debeir.engines.dummyindex.index", "qualname": "es_isup", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">es_client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.engines.elasticsearch": {"fullname": "debeir.engines.elasticsearch", "modulename": "debeir.engines.elasticsearch", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.elasticsearch.change_bm25": {"fullname": "debeir.engines.elasticsearch.change_bm25", "modulename": "debeir.engines.elasticsearch.change_bm25", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"fullname": "debeir.engines.elasticsearch.change_bm25.change_bm25_params", "modulename": "debeir.engines.elasticsearch.change_bm25", "qualname": "change_bm25_params", "type": "function", "doc": "<p>Change the BM25 parameters of the elasticsearch BM25 ranker.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>index</strong>:  The elasticsearch index name</li>\n<li><strong>k1</strong>:  The k parameter for BM25 (default 1.2) [Usually 0-3] [Term saturation constant] ->\nThe higher the k value, the more weight given to document that repeat terms.</li>\n<li><strong>b</strong>:  The b parameter for BM25 (default 0.75) [Usually 0-1] [Document length constant] ->\nThe higher the b value, the higher it penalises longer documents.</li>\n<li><strong>base_url</strong>:  The elasticsearch base URL for API requests (without index suffix)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">k1</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;http://localhost:9200&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.executor": {"fullname": "debeir.engines.elasticsearch.executor", "modulename": "debeir.engines.elasticsearch.executor", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"fullname": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor", "modulename": "debeir.engines.elasticsearch.executor", "qualname": "ElasticsearchExecutor", "type": "class", "doc": "<p>Executes an elasticsearch query given the query generated from the config, topics and query class object.</p>\n\n<p>Computes regular patterns of queries expected from general IR topics and indexes.\nIncludes:\n    1. Reranking\n    2. End-to-End Neural IR\n    3. Statistical keyword matching</p>\n"}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"fullname": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__", "modulename": "debeir.engines.elasticsearch.executor", "qualname": "ElasticsearchExecutor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span>,</span><span class=\"param\">\t<span class=\"n\">index_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GenericElasticsearchQuery</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">return_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">test</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"fullname": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query", "modulename": "debeir.engines.elasticsearch.executor", "qualname": "ElasticsearchExecutor.generate_query", "type": "function", "doc": "<p>Generates a query given a topic number from the list of topics</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic_num</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"fullname": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query", "modulename": "debeir.engines.elasticsearch.executor", "qualname": "ElasticsearchExecutor.execute_query", "type": "function", "doc": "<p>Execute a query given parameters</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"fullname": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries", "modulename": "debeir.engines.elasticsearch.executor", "qualname": "ElasticsearchExecutor.run_all_queries", "type": "function", "doc": "<p>A generic function that will asynchronously run all topics using the execute_query() method</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query_type</strong>:  Which query to execute. Query_type determines which method is used to generate the queries\nfrom self.query.query_funcs: Dict[str, func]</li>\n<li><strong>return_results</strong>:  Whether to return raw results from the client. Useful for analysing results directly or\nfor computing the BM25 scores for log normalization in NIR-style scoring</li>\n<li><strong>return_size</strong>:  Number of documents to return. Overrides the config value if exists.</li>\n<li><strong>return_id_only</strong>:  Return the ID of the document only, rather than the full source document.</li>\n<li><strong>args</strong>:  Arguments to pass to the execute_query method</li>\n<li><strong>kwargs</strong>:  Keyword arguments to pass to the execute_query method</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A list of results if return_results = True else an empty list is returned.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_results</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">return_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "async def"}, "debeir.engines.elasticsearch.generate_script_score": {"fullname": "debeir.engines.elasticsearch.generate_script_score", "modulename": "debeir.engines.elasticsearch.generate_script_score", "type": "module", "doc": "<p></p>\n"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder", "type": "class", "doc": "<p>Builds Script Score source for NIR-style queries in elasticsearch\nUses the painless language</p>\n\n<p>This is a string builder class</p>\n"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder.add_preamble", "type": "function", "doc": "<p>Adds preamble to the internal string\nThis will return the bm25 score if the normalization constant is below 0</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder.add_log_score", "type": "function", "doc": "<p>Adds the BM25 log score line</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ignore_below_one</strong>:  Ignore all scores below 1.0 as Log(1) = 0. Otherwise, just ignore Log(0 and under).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>SourceBuilder\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_below_one</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">generate_script_score</span><span class=\"o\">.</span><span class=\"n\">SourceBuilder</span>:</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder.add_embed_field", "type": "function", "doc": "<p>Adds a cosine score line.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>qfield</strong>:  Query field</li>\n<li><strong>field</strong>:  Document facet field</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">qfield</span>,</span><span class=\"param\">\t<span class=\"n\">field</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">generate_script_score</span><span class=\"o\">.</span><span class=\"n\">SourceBuilder</span>:</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"fullname": "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "SourceBuilder.finish", "type": "function", "doc": "<p>Finalises the script score and returns the internal string</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A string containing the script score query\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"fullname": "debeir.engines.elasticsearch.generate_script_score.generate_source", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "generate_source", "type": "function", "doc": "<p>Generates the script source based off a set of input fields and facets</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>qfields</strong>:  Query fields (or topic fields)</li>\n<li><strong>fields</strong>:  Document facets to compute cosine similarity on</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">qfields</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">fields</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"fullname": "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "check_params_is_valid", "type": "function", "doc": "<p>Validate if the parameters for the script score passes a simple sanity check.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>params</strong>: </li>\n<li><strong>qfields</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span>, </span><span class=\"param\"><span class=\"n\">qfields</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"fullname": "debeir.engines.elasticsearch.generate_script_score.generate_script", "modulename": "debeir.engines.elasticsearch.generate_script_score", "qualname": "generate_script", "type": "function", "doc": "<p>Parameters for creating the script</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fields</strong>:  Document fields to search</li>\n<li><strong>params</strong>:  Parameters for the script</li>\n<li><strong>source_generator</strong>:   Function that will generate the script</li>\n<li><strong>qfields</strong>:  Query fields to search from (topic facets)</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fields</span>,</span><span class=\"param\">\t<span class=\"n\">params</span>,</span><span class=\"param\">\t<span class=\"n\">source_generator</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">generate_source</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">qfields</span><span class=\"o\">=</span><span class=\"s1\">&#39;q_eb&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "debeir.engines.solr": {"fullname": "debeir.engines.solr", "modulename": "debeir.engines.solr", "type": "module", "doc": "<p></p>\n"}, "debeir.evaluation": {"fullname": "debeir.evaluation", "modulename": "debeir.evaluation", "type": "module", "doc": "<p>Evaluation for retrieved results.</p>\n\n<p>Works for TREC-style queries or for out-the-box returned results from the implemented search engines.</p>\n"}, "debeir.evaluation.cross_validation": {"fullname": "debeir.evaluation.cross_validation", "modulename": "debeir.evaluation.cross_validation", "type": "module", "doc": "<p></p>\n"}, "debeir.evaluation.cross_validation.split_k_fold": {"fullname": "debeir.evaluation.cross_validation.split_k_fold", "modulename": "debeir.evaluation.cross_validation", "qualname": "split_k_fold", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">n_fold</span>, </span><span class=\"param\"><span class=\"n\">data_files</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"fullname": "debeir.evaluation.cross_validation.CrossValidatorTypes", "modulename": "debeir.evaluation.cross_validation", "qualname": "CrossValidatorTypes", "type": "class", "doc": "<p>Cross Validator Strategies for separating the dataset</p>\n", "bases": "enum.Enum"}, "debeir.evaluation.cross_validation.CrossValidator": {"fullname": "debeir.evaluation.cross_validation.CrossValidator", "modulename": "debeir.evaluation.cross_validation", "qualname": "CrossValidator", "type": "class", "doc": "<p>Cross Validator Class for different types of data_sets</p>\n\n<p>E.g. List -> [[Data], label]\n     List[Dict] -> {\"data\": Data, \"label\": label}\n     Huggingface Dataset Object -> Data(set=\"train\", label = \"label\").select(idx)</p>\n"}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"fullname": "debeir.evaluation.cross_validation.CrossValidator.__init__", "modulename": "debeir.evaluation.cross_validation", "qualname": "CrossValidator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">x_idx_label_or_attr</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">y_idx_label_or_attr</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\tcross_validator_type: [&lt;class &#x27;str&#x27;&gt;, &lt;enum &#x27;CrossValidatorTypes&#x27;&gt;] = &lt;CrossValidatorTypes.Stratified: &#x27;StratifiedKFold&#x27;&gt;,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"n\">n_splits</span><span class=\"o\">=</span><span class=\"mi\">5</span></span>)</span>"}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"fullname": "debeir.evaluation.cross_validation.CrossValidator.get_fold", "modulename": "debeir.evaluation.cross_validation", "qualname": "CrossValidator.get_fold", "type": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fold_num</strong>:  Which fold to pick</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">fold_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.evaluator": {"fullname": "debeir.evaluation.evaluator", "modulename": "debeir.evaluation.evaluator", "type": "module", "doc": "<p></p>\n"}, "debeir.evaluation.evaluator.Evaluator": {"fullname": "debeir.evaluation.evaluator.Evaluator", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator", "type": "class", "doc": "<p>Evaluation class for computing metrics from TREC-style files</p>\n"}, "debeir.evaluation.evaluator.Evaluator.__init__": {"fullname": "debeir.evaluation.evaluator.Evaluator.__init__", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"fullname": "debeir.evaluation.evaluator.Evaluator.evaluate_runs", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator.evaluate_runs", "type": "function", "doc": "<p>Evaluates the TREC-style results from an input result list or file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>res</strong>:  Results file path or raw results list</li>\n<li><strong>kwargs</strong>:  Keyword arguments to pass to the underlying analysis_tools_ir.parse_run library</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">res</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"fullname": "debeir.evaluation.evaluator.Evaluator.average_all_metrics", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator.average_all_metrics", "type": "function", "doc": "<p>Averages the metric per topic scores into a single averaged score.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>runs: Parsed run dictionary: {metric_name@depth</strong>:  Run object}</li>\n<li><strong>logger</strong>:  Logger to print metrics</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">runs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">loguru</span><span class=\"o\">.</span><span class=\"n\">logger</span> <span class=\"n\">handlers</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">sink</span><span class=\"o\">=&lt;</span><span class=\"n\">_io</span><span class=\"o\">.</span><span class=\"n\">StringIO</span> <span class=\"nb\">object</span> <span class=\"n\">at</span> <span class=\"mh\">0x7f966d8cdea0</span><span class=\"o\">&gt;</span><span class=\"p\">)]</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"fullname": "debeir.evaluation.evaluator.Evaluator.sigtests", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator.sigtests", "type": "function", "doc": "<p>Run a paired significance test on two result files</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>results_a</strong>: </li>\n<li><strong>results_b</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">results_a</span>, </span><span class=\"param\"><span class=\"n\">results_b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"fullname": "debeir.evaluation.evaluator.Evaluator.build_from_config", "modulename": "debeir.evaluation.evaluator", "qualname": "Evaluator.build_from_config", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>,</span><span class=\"param\">\t<span class=\"n\">metrics_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">MetricsConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.evaluation.residual_scoring": {"fullname": "debeir.evaluation.residual_scoring", "modulename": "debeir.evaluation.residual_scoring", "type": "module", "doc": "<p></p>\n"}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"fullname": "debeir.evaluation.residual_scoring.ResidualEvaluator", "modulename": "debeir.evaluation.residual_scoring", "qualname": "ResidualEvaluator", "type": "class", "doc": "<p>Evaluation class for computing metrics from TREC-style files</p>\n", "bases": "debeir.evaluation.evaluator.Evaluator"}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"fullname": "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__", "modulename": "debeir.evaluation.residual_scoring", "qualname": "ResidualEvaluator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">filter_ids</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span></span>)</span>"}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"fullname": "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs", "modulename": "debeir.evaluation.residual_scoring", "qualname": "ResidualEvaluator.evaluate_runs", "type": "function", "doc": "<p>Evaluates the TREC-style results from an input result list or file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>res</strong>:  Results file path or raw results list</li>\n<li><strong>kwargs</strong>:  Keyword arguments to pass to the underlying analysis_tools_ir.parse_run library</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">res</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">with_trec_binary</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces": {"fullname": "debeir.interfaces", "modulename": "debeir.interfaces", "type": "module", "doc": "<p>Interfaces to implement custom data_sets in nir.data_sets.</p>\n"}, "debeir.interfaces.callbacks": {"fullname": "debeir.interfaces.callbacks", "modulename": "debeir.interfaces.callbacks", "type": "module", "doc": "<p>Callbacks for before after running.\nE.g. before is for setup\nafter is for evaluation/serialization etc</p>\n"}, "debeir.interfaces.callbacks.Callback": {"fullname": "debeir.interfaces.callbacks.Callback", "modulename": "debeir.interfaces.callbacks", "qualname": "Callback", "type": "class", "doc": "<p></p>\n"}, "debeir.interfaces.callbacks.Callback.__init__": {"fullname": "debeir.interfaces.callbacks.Callback.__init__", "modulename": "debeir.interfaces.callbacks", "qualname": "Callback.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.interfaces.callbacks.Callback.before": {"fullname": "debeir.interfaces.callbacks.Callback.before", "modulename": "debeir.interfaces.callbacks", "qualname": "Callback.before", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pipeline</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.callbacks.Callback.after": {"fullname": "debeir.interfaces.callbacks.Callback.after", "modulename": "debeir.interfaces.callbacks", "qualname": "Callback.after", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.callbacks.SerializationCallback": {"fullname": "debeir.interfaces.callbacks.SerializationCallback", "modulename": "debeir.interfaces.callbacks", "qualname": "SerializationCallback", "type": "class", "doc": "<p></p>\n", "bases": "Callback"}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"fullname": "debeir.interfaces.callbacks.SerializationCallback.__init__", "modulename": "debeir.interfaces.callbacks", "qualname": "SerializationCallback.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>,</span><span class=\"param\">\t<span class=\"n\">nir_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">NIRConfig</span></span>)</span>"}, "debeir.interfaces.callbacks.SerializationCallback.before": {"fullname": "debeir.interfaces.callbacks.SerializationCallback.before", "modulename": "debeir.interfaces.callbacks", "qualname": "SerializationCallback.before", "type": "function", "doc": "<p>Check if output file exists</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Output file path\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pipeline</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.callbacks.SerializationCallback.after": {"fullname": "debeir.interfaces.callbacks.SerializationCallback.after", "modulename": "debeir.interfaces.callbacks", "qualname": "SerializationCallback.after", "type": "function", "doc": "<p>Serialize results to self.output_file in a TREC-style format</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>:  Topic number to serialize</li>\n<li><strong>res</strong>:  Raw elasticsearch result</li>\n<li><strong>run_name: The run name for TREC-style runs (default</strong>:  NO_RUN_NAME)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.callbacks.EvaluationCallback": {"fullname": "debeir.interfaces.callbacks.EvaluationCallback", "modulename": "debeir.interfaces.callbacks", "qualname": "EvaluationCallback", "type": "class", "doc": "<p></p>\n", "bases": "Callback"}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"fullname": "debeir.interfaces.callbacks.EvaluationCallback.__init__", "modulename": "debeir.interfaces.callbacks", "qualname": "EvaluationCallback.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">evaluator</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">evaluation</span><span class=\"o\">.</span><span class=\"n\">evaluator</span><span class=\"o\">.</span><span class=\"n\">Evaluator</span>, </span><span class=\"param\"><span class=\"n\">config</span></span>)</span>"}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"fullname": "debeir.interfaces.callbacks.EvaluationCallback.before", "modulename": "debeir.interfaces.callbacks", "qualname": "EvaluationCallback.before", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">pipeline</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"fullname": "debeir.interfaces.callbacks.EvaluationCallback.after", "modulename": "debeir.interfaces.callbacks", "qualname": "EvaluationCallback.after", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">results</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"n\">id_field</span><span class=\"o\">=</span><span class=\"s1\">&#39;id&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config": {"fullname": "debeir.interfaces.config", "modulename": "debeir.interfaces.config", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.config.Config": {"fullname": "debeir.interfaces.config.Config", "modulename": "debeir.interfaces.config", "qualname": "Config", "type": "class", "doc": "<p>Config Interface with creation class methods</p>\n"}, "debeir.interfaces.config.Config.__init__": {"fullname": "debeir.interfaces.config.Config.__init__", "modulename": "debeir.interfaces.config", "qualname": "Config.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.interfaces.config.Config.from_toml": {"fullname": "debeir.interfaces.config.Config.from_toml", "modulename": "debeir.interfaces.config", "qualname": "Config.from_toml", "type": "function", "doc": "<p>Instantiates a Config object from a toml file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fp</strong>:  File path of the Config TOML file</li>\n<li><strong>field_class</strong>:  Class of the Config object to be instantiated</li>\n<li><strong>args</strong>:  Arguments to be passed to Config</li>\n<li><strong>kwargs</strong>:  Keyword arguments to be passed</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A instantiated and validated Config object.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">field_class</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.config.Config.from_args": {"fullname": "debeir.interfaces.config.Config.from_args", "modulename": "debeir.interfaces.config", "qualname": "Config.from_args", "type": "function", "doc": "<p>Instantiates a Config object from arguments</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args_dict</strong>: </li>\n<li><strong>field_class</strong>: </li>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">args_dict</span><span class=\"p\">:</span> <span class=\"n\">MutableMapping</span>, </span><span class=\"param\"><span class=\"n\">field_class</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.Config.from_dict": {"fullname": "debeir.interfaces.config.Config.from_dict", "modulename": "debeir.interfaces.config", "qualname": "Config.from_dict", "type": "function", "doc": "<p>Instantiates a Config object from a dictionary</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_class</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data_class</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.Config.validate": {"fullname": "debeir.interfaces.config.Config.validate", "modulename": "debeir.interfaces.config", "qualname": "Config.validate", "type": "function", "doc": "<p>Validates if the config is correct.\nMust be implemented by inherited classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.GenericConfig": {"fullname": "debeir.interfaces.config.GenericConfig", "modulename": "debeir.interfaces.config", "qualname": "GenericConfig", "type": "class", "doc": "<p>Generic NIR Configuration file for which all configs will inherit</p>\n", "bases": "Config, abc.ABC"}, "debeir.interfaces.config.GenericConfig.__init__": {"fullname": "debeir.interfaces.config.GenericConfig.__init__", "modulename": "debeir.interfaces.config", "qualname": "GenericConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_normalize</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ablations</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">automatic</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"nb\">object</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoder_fp</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_weights</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">parser_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">executor_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_ceiling</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topics_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite_output_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">run_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.interfaces.config.GenericConfig.from_toml": {"fullname": "debeir.interfaces.config.GenericConfig.from_toml", "modulename": "debeir.interfaces.config", "qualname": "GenericConfig.from_toml", "type": "function", "doc": "<p>Instantiates a Config object from a toml file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fp</strong>:  File path of the Config TOML file</li>\n<li><strong>field_class</strong>:  Class of the Config object to be instantiated</li>\n<li><strong>args</strong>:  Arguments to be passed to Config</li>\n<li><strong>kwargs</strong>:  Keyword arguments to be passed</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A instantiated and validated Config object.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">fp</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.config.ElasticsearchConfig": {"fullname": "debeir.interfaces.config.ElasticsearchConfig", "modulename": "debeir.interfaces.config", "qualname": "ElasticsearchConfig", "type": "class", "doc": "<p>Basic Elasticsearch configuration file settings from the master nir.toml file</p>\n", "bases": "Config"}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"fullname": "debeir.interfaces.config.ElasticsearchConfig.__init__", "modulename": "debeir.interfaces.config", "qualname": "ElasticsearchConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"fullname": "debeir.interfaces.config.ElasticsearchConfig.validate", "modulename": "debeir.interfaces.config", "qualname": "ElasticsearchConfig.validate", "type": "function", "doc": "<p>Checks if Elasticsearch URL is correct</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.SolrConfig": {"fullname": "debeir.interfaces.config.SolrConfig", "modulename": "debeir.interfaces.config", "qualname": "SolrConfig", "type": "class", "doc": "<p>Basic Solr configuration file settings from the master nir.toml file</p>\n", "bases": "ElasticsearchConfig"}, "debeir.interfaces.config.SolrConfig.__init__": {"fullname": "debeir.interfaces.config.SolrConfig.__init__", "modulename": "debeir.interfaces.config", "qualname": "SolrConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">protocol</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ip</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "debeir.interfaces.config.MetricsConfig": {"fullname": "debeir.interfaces.config.MetricsConfig", "modulename": "debeir.interfaces.config", "qualname": "MetricsConfig", "type": "class", "doc": "<p>Basic Metrics configuration file settings from the master nir.toml file</p>\n", "bases": "Config"}, "debeir.interfaces.config.MetricsConfig.__init__": {"fullname": "debeir.interfaces.config.MetricsConfig.__init__", "modulename": "debeir.interfaces.config", "qualname": "MetricsConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "debeir.interfaces.config.MetricsConfig.validate": {"fullname": "debeir.interfaces.config.MetricsConfig.validate", "modulename": "debeir.interfaces.config", "qualname": "MetricsConfig.validate", "type": "function", "doc": "<p>Checks if each Metrics is usable by evaluator classes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.NIRConfig": {"fullname": "debeir.interfaces.config.NIRConfig", "modulename": "debeir.interfaces.config", "qualname": "NIRConfig", "type": "class", "doc": "<p>Basic NIR configuration file settings from the master nir.toml file</p>\n", "bases": "Config"}, "debeir.interfaces.config.NIRConfig.__init__": {"fullname": "debeir.interfaces.config.NIRConfig.__init__", "modulename": "debeir.interfaces.config", "qualname": "NIRConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">return_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">output_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "debeir.interfaces.config.NIRConfig.validate": {"fullname": "debeir.interfaces.config.NIRConfig.validate", "modulename": "debeir.interfaces.config", "qualname": "NIRConfig.validate", "type": "function", "doc": "<p>Validates if the config is correct.\nMust be implemented by inherited classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.apply_config": {"fullname": "debeir.interfaces.config.apply_config", "modulename": "debeir.interfaces.config", "qualname": "apply_config", "type": "function", "doc": "<p>Configuration decorator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong>:  Decorated function</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.override_with_toml_config": {"fullname": "debeir.interfaces.config.override_with_toml_config", "modulename": "debeir.interfaces.config", "qualname": "override_with_toml_config", "type": "function", "doc": "<p>Configuration decorator. Overwrite a functions kwargs and args with a specified toml config file.\nPass override_with_config=path/to/config</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong>:  Decorated function</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.config.save_kwargs_to_file": {"fullname": "debeir.interfaces.config.save_kwargs_to_file", "modulename": "debeir.interfaces.config", "qualname": "save_kwargs_to_file", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.converters": {"fullname": "debeir.interfaces.converters", "modulename": "debeir.interfaces.converters", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"fullname": "debeir.interfaces.converters.ParsedTopicsToDataset", "modulename": "debeir.interfaces.converters", "qualname": "ParsedTopicsToDataset", "type": "class", "doc": "<p>Converts a parser's output to a huggingface dataset object.</p>\n"}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"fullname": "debeir.interfaces.converters.ParsedTopicsToDataset.__init__", "modulename": "debeir.interfaces.converters", "qualname": "ParsedTopicsToDataset.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"fullname": "debeir.interfaces.converters.ParsedTopicsToDataset.convert", "modulename": "debeir.interfaces.converters", "qualname": "ParsedTopicsToDataset.convert", "type": "function", "doc": "<p>Flatten a Dict of shape (traditional parser output)\n{topic_id: {\n        \"Facet_1\": ...\n        \"Facet_2\": ...\n    }\n}</p>\n\n<p>-></p>\n\n<p>To a flattened arrow-like dataset.\n{\ntopic_ids: [],\nFacet_1s: [],\nFacet_2s: [],\n}</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>output</strong>:  Topics output from the parser object</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">parser</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">Parser</span>,</span><span class=\"param\">\t<span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.document": {"fullname": "debeir.interfaces.document", "modulename": "debeir.interfaces.document", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.document.Document": {"fullname": "debeir.interfaces.document.Document", "modulename": "debeir.interfaces.document", "qualname": "Document", "type": "class", "doc": "<p>Generic Document class.\nUsed as an interface for interacting across multiple indexes with different mappings.</p>\n"}, "debeir.interfaces.document.Document.__init__": {"fullname": "debeir.interfaces.document.Document.__init__", "modulename": "debeir.interfaces.document", "qualname": "Document.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">doc_id</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">facets</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span>)</span>"}, "debeir.interfaces.document.Document.from_results": {"fullname": "debeir.interfaces.document.Document.from_results", "modulename": "debeir.interfaces.document", "qualname": "Document.from_results", "type": "function", "doc": "<p>Produces a list of Document objects from raw results returned from the index</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">Document</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.document.Document.get_document_id": {"fullname": "debeir.interfaces.document.Document.get_document_id", "modulename": "debeir.interfaces.document", "qualname": "Document.get_document_id", "type": "function", "doc": "<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>self.doc_id\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.document.Document.flatten_facets": {"fullname": "debeir.interfaces.document.Document.flatten_facets", "modulename": "debeir.interfaces.document", "qualname": "Document.flatten_facets", "type": "function", "doc": "<p>Flattens multi-level internal document facets into a single level\n    e.g. Doc['Upper']['Lower'] -> Doc['Upper_Lower']</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.document.Document.get_document_facet": {"fullname": "debeir.interfaces.document.Document.get_document_facet", "modulename": "debeir.interfaces.document", "qualname": "Document.get_document_facet", "type": "function", "doc": "<p>Retrieve a document facet\nWorks for multidimensional keys or single</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong>:  Facet to retrieve</li>\n<li><strong>sep</strong>:  The seperator for multidimensional key</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns the document facet given the key (field)\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;_&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.document.Document.set": {"fullname": "debeir.interfaces.document.Document.set", "modulename": "debeir.interfaces.document", "qualname": "Document.set", "type": "function", "doc": "<p>Set attributes of the object. Use keyword arguments to do so. Works as a builder class.\ndoc.set(doc_id=\"123\").set(facets={\"title\": \"my title\"})</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>doc_id</strong>: </li>\n<li><strong>facets</strong>: </li>\n<li><strong>score</strong>: </li>\n<li><strong>facet</strong>: </li>\n<li><strong>facet_value</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns document object\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc_id</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">facets</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">facet</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">facet_value</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.document.Document.get_trec_format": {"fullname": "debeir.interfaces.document.Document.get_trec_format", "modulename": "debeir.interfaces.document", "qualname": "Document.get_trec_format", "type": "function", "doc": "<p>Get the trec format of a list of ranked documents. This function is a generator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ranked_list</strong>:  A list of Document-type objects</li>\n<li><strong>sort</strong>:  Whether to sort the input list in descending order of score.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">ranked_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">Document</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">sort</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.executor": {"fullname": "debeir.interfaces.executor", "modulename": "debeir.interfaces.executor", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor", "type": "class", "doc": "<p>Generic Executor class for Elasticsearch</p>\n", "bases": "debeir.engines.elasticsearch.executor.ElasticsearchExecutor"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">AsyncElasticsearch</span>,</span><span class=\"param\">\t<span class=\"n\">index_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GenericElasticsearchQuery</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.generate_query", "type": "function", "doc": "<p>Generates a standard BM25 query given the topic number</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>:  Query topic number to generate</li>\n<li><strong>best_fields</strong>:  Whether to use a curated list of fields</li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic_num</span>, </span><span class=\"param\"><span class=\"n\">best_fields</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.generate_embedding_query", "type": "function", "doc": "<p>Executes an NIR-style query with combined scoring.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n<li><strong>cosine_weights</strong>: </li>\n<li><strong>query_weights</strong>: </li>\n<li><strong>norm_weight</strong>: </li>\n<li><strong>automatic_scores</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic_num</span>,</span><span class=\"param\">\t<span class=\"n\">cosine_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">query_weights</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm_weight</span><span class=\"o\">=</span><span class=\"mf\">2.15</span>,</span><span class=\"param\">\t<span class=\"n\">automatic_scores</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.execute_query", "type": "function", "doc": "<p>Execute a query given parameters</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_id_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">topic_num</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ablation</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">query_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.run_automatic_adjustment", "type": "function", "doc": "<p>Get the normalization constant to be used in NIR-style queries for all topics given an initial\nrun of BM25 results.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"fullname": "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config", "modulename": "debeir.interfaces.executor", "qualname": "GenericElasticsearchExecutor.build_from_config", "type": "function", "doc": "<p>Build an query executor engine from a config file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">query_obj</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">GenericElasticsearchQuery</span>,</span><span class=\"param\">\t<span class=\"n\">client</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span>,</span><span class=\"param\">\t<span class=\"n\">nir_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">NIRConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.indexer": {"fullname": "debeir.interfaces.indexer", "modulename": "debeir.interfaces.indexer", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.indexer.Indexer": {"fullname": "debeir.interfaces.indexer.Indexer", "modulename": "debeir.interfaces.indexer", "qualname": "Indexer", "type": "class", "doc": "<p></p>\n"}, "debeir.interfaces.indexer.Indexer.__init__": {"fullname": "debeir.interfaces.indexer.Indexer.__init__", "modulename": "debeir.interfaces.indexer", "qualname": "Indexer.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">client</span></span>)</span>"}, "debeir.interfaces.indexer.Indexer.get_field": {"fullname": "debeir.interfaces.indexer.Indexer.get_field", "modulename": "debeir.interfaces.indexer", "qualname": "Indexer.get_field", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span>, </span><span class=\"param\"><span class=\"n\">field</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer", "type": "class", "doc": "<p>Create a NIR-style index, with dense field representations with provided sentence encoder\nAssumes you've already indexed to start with.</p>\n", "bases": "Indexer, threading.Thread"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer.__init__", "type": "function", "doc": "<p>This constructor should always be called with keyword arguments. Arguments are:</p>\n\n<p><em>group</em> should be None; reserved for future extension when a ThreadGroup\nclass is implemented.</p>\n\n<p><em>target</em> is the callable object to be invoked by the run()\nmethod. Defaults to None, meaning nothing is called.</p>\n\n<p><em>name</em> is the thread name. By default, a unique name is constructed of\nthe form \"Thread-N\" where N is a small decimal number.</p>\n\n<p><em>args</em> is the argument tuple for the target invocation. Defaults to ().</p>\n\n<p><em>kwargs</em> is a dictionary of keyword arguments for the target\ninvocation. Defaults to {}.</p>\n\n<p>If a subclass overrides the constructor, it must make sure to invoke\nthe base class constructor (Thread.__init__()) before doing anything\nelse to the thread.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">es_client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">Elasticsearch</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">fields_to_encode</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">queue</span><span class=\"p\">:</span> <span class=\"n\">queue</span><span class=\"o\">.</span><span class=\"n\">Queue</span></span>)</span>"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer.update_mappings", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">fields</span>, </span><span class=\"param\"><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">elasticsearch</span><span class=\"o\">.</span><span class=\"n\">Elasticsearch</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer.get_field", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span>, </span><span class=\"param\"><span class=\"n\">field</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer.index_document", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"fullname": "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run", "modulename": "debeir.interfaces.indexer", "qualname": "SemanticElasticsearchIndexer.run", "type": "function", "doc": "<p>Method representing the thread's activity.</p>\n\n<p>You may override this method in a subclass. The standard run() method\ninvokes the callable object passed to the object's constructor as the\ntarget argument, if any, with sequential and keyword arguments taken\nfrom the args and kwargs arguments, respectively.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.parser": {"fullname": "debeir.interfaces.parser", "modulename": "debeir.interfaces.parser", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.parser.Parser": {"fullname": "debeir.interfaces.parser.Parser", "modulename": "debeir.interfaces.parser", "qualname": "Parser", "type": "class", "doc": "<p>Parser interface</p>\n"}, "debeir.interfaces.parser.Parser.__init__": {"fullname": "debeir.interfaces.parser.Parser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "Parser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.interfaces.parser.Parser.normalize": {"fullname": "debeir.interfaces.parser.Parser.normalize", "modulename": "debeir.interfaces.parser", "qualname": "Parser.normalize", "type": "function", "doc": "<p>Flatten the dictionary, i.e. from Dict[int, Dict] -> Dict[str, str_or_int]</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>input_dict</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">input_dict</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.parser.Parser.get_topics": {"fullname": "debeir.interfaces.parser.Parser.get_topics", "modulename": "debeir.interfaces.parser", "qualname": "Parser.get_topics", "type": "function", "doc": "<p>Instance method for getting topics, forwards instance self parameters to the _get_topics class method.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.parser.PickleParser": {"fullname": "debeir.interfaces.parser.PickleParser", "modulename": "debeir.interfaces.parser", "qualname": "PickleParser", "type": "class", "doc": "<p>Load topics from a pickle file</p>\n", "bases": "Parser"}, "debeir.interfaces.parser.PickleParser.__init__": {"fullname": "debeir.interfaces.parser.PickleParser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "PickleParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "debeir.interfaces.parser.XMLParser": {"fullname": "debeir.interfaces.parser.XMLParser", "modulename": "debeir.interfaces.parser", "qualname": "XMLParser", "type": "class", "doc": "<p>Load topics from an XML file</p>\n", "bases": "Parser"}, "debeir.interfaces.parser.XMLParser.__init__": {"fullname": "debeir.interfaces.parser.XMLParser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "XMLParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">topic_field_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">id_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "debeir.interfaces.parser.XMLParser.unwrap": {"fullname": "debeir.interfaces.parser.XMLParser.unwrap", "modulename": "debeir.interfaces.parser", "qualname": "XMLParser.unwrap", "type": "function", "doc": "<p>Converts defaultdict to dict and list of size 1 to just the element</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>doc_dict</strong>: </li>\n<li><strong>key</strong>: </li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">doc_dict</span>, </span><span class=\"param\"><span class=\"n\">key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.parser.CSVParser": {"fullname": "debeir.interfaces.parser.CSVParser", "modulename": "debeir.interfaces.parser", "qualname": "CSVParser", "type": "class", "doc": "<p>Loads topics from a CSV file</p>\n", "bases": "Parser"}, "debeir.interfaces.parser.CSVParser.__init__": {"fullname": "debeir.interfaces.parser.CSVParser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "CSVParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parsed_fields</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "debeir.interfaces.parser.TSVParser": {"fullname": "debeir.interfaces.parser.TSVParser", "modulename": "debeir.interfaces.parser", "qualname": "TSVParser", "type": "class", "doc": "<p></p>\n", "bases": "CSVParser"}, "debeir.interfaces.parser.TSVParser.__init__": {"fullname": "debeir.interfaces.parser.TSVParser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "TSVParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">parse_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "debeir.interfaces.parser.JsonLinesParser": {"fullname": "debeir.interfaces.parser.JsonLinesParser", "modulename": "debeir.interfaces.parser", "qualname": "JsonLinesParser", "type": "class", "doc": "<p>Loads topics from a jsonl file,\na JSON per line</p>\n\n<p>Provide parse_fields, id_field and whether to ignore full matches on json keys\nsecondary_id appends to the primary id as jsonlines are flattened structure and may contain duplicate ids.</p>\n", "bases": "Parser"}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"fullname": "debeir.interfaces.parser.JsonLinesParser.__init__", "modulename": "debeir.interfaces.parser", "qualname": "JsonLinesParser.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parse_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">id_field</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_full_match</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">secondary_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.interfaces.pipeline": {"fullname": "debeir.interfaces.pipeline", "modulename": "debeir.interfaces.pipeline", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.pipeline.Pipeline": {"fullname": "debeir.interfaces.pipeline.Pipeline", "modulename": "debeir.interfaces.pipeline", "qualname": "Pipeline", "type": "class", "doc": "<p></p>\n"}, "debeir.interfaces.pipeline.Pipeline.__init__": {"fullname": "debeir.interfaces.pipeline.Pipeline.__init__", "modulename": "debeir.interfaces.pipeline", "qualname": "Pipeline.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">engine</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">executor</span><span class=\"o\">.</span><span class=\"n\">GenericElasticsearchExecutor</span>,</span><span class=\"param\">\t<span class=\"n\">metrics_config</span>,</span><span class=\"param\">\t<span class=\"n\">engine_config</span>,</span><span class=\"param\">\t<span class=\"n\">nir_config</span>,</span><span class=\"param\">\t<span class=\"n\">run_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">Config</span>,</span><span class=\"param\">\t<span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "debeir.interfaces.pipeline.Pipeline.disable": {"fullname": "debeir.interfaces.pipeline.Pipeline.disable", "modulename": "debeir.interfaces.pipeline", "qualname": "Pipeline.disable", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">parts</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"fullname": "debeir.interfaces.pipeline.Pipeline.build_from_config", "modulename": "debeir.interfaces.pipeline", "qualname": "Pipeline.build_from_config", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">nir_config_fp</span>,</span><span class=\"param\">\t<span class=\"n\">engine</span>,</span><span class=\"param\">\t<span class=\"n\">config_fp</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">pipeline</span><span class=\"o\">.</span><span class=\"n\">Pipeline</span>:</span></span>", "funcdef": "def"}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"fullname": "debeir.interfaces.pipeline.Pipeline.run_pipeline", "modulename": "debeir.interfaces.pipeline", "qualname": "Pipeline.run_pipeline", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.pipeline.NIRPipeline": {"fullname": "debeir.interfaces.pipeline.NIRPipeline", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline", "type": "class", "doc": "<p></p>\n", "bases": "Pipeline"}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.__init__", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.prehook", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.prehook", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.run_engine", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.run_engine", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.posthook", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.posthook", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.run_pipeline", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.run_pipeline", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">return_results</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"fullname": "debeir.interfaces.pipeline.NIRPipeline.register_callback", "modulename": "debeir.interfaces.pipeline", "qualname": "NIRPipeline.register_callback", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">cb</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.query": {"fullname": "debeir.interfaces.query", "modulename": "debeir.interfaces.query", "type": "module", "doc": "<p></p>\n"}, "debeir.interfaces.query.Query": {"fullname": "debeir.interfaces.query.Query", "modulename": "debeir.interfaces.query", "qualname": "Query", "type": "class", "doc": "<p>A query interface class</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topics</strong>:  Topics that the query will be composed of</li>\n<li><strong>config</strong>:  Config object that contains the settings for querying</li>\n</ul>\n"}, "debeir.interfaces.query.Query.__init__": {"fullname": "debeir.interfaces.query.Query.__init__", "modulename": "debeir.interfaces.query", "qualname": "Query.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">GenericConfig</span></span>)</span>"}, "debeir.interfaces.query.GenericElasticsearchQuery": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery", "type": "class", "doc": "<p>A generic elasticsearch query. Contains methods for NIR-style (embedding) queries and normal BM25 queries.\nRequires topics, configs to be included</p>\n", "bases": "Query"}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.__init__", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">topics</span>,</span><span class=\"param\">\t<span class=\"n\">config</span>,</span><span class=\"param\">\t<span class=\"n\">top_bm25_scores</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mappings</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">id_mapping</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.generate_query", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.generate_query", "type": "function", "doc": "<p>Generates a simple BM25 query based off the query facets. Searches over all the document facets.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>: </li>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic_num</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.set_bm25_scores", "type": "function", "doc": "<p>Sets BM25 scores that are used for NIR-style scoring. The top BM25 score for each topic is used\nfor log normalization.</p>\n\n<p>Score = log(bm25)/log(z) + embed_score</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>scores: Top BM25 Scores of the form {topic_num</strong>:  top_bm25_score}</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">scores</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.has_bm25_scores", "type": "function", "doc": "<p>Checks if BM25 scores have been set</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.generate_query_embedding", "type": "function", "doc": "<p>Generates an embedding script score query for Elasticsearch as part of the NIR scoring function.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic_num</strong>:  The topic number to search for</li>\n<li><strong>encoder</strong>:  The encoder that will be used for encoding the topics</li>\n<li><strong>norm_weight</strong>:  The BM25 log normalization constant</li>\n<li><strong>ablations</strong>:  Whether to execute ablation style queries (i.e. one query facet\nor one document facet at a time)</li>\n<li><strong>cosine_ceiling</strong>:  Cosine ceiling used for automatic z-log normalization parameter calculation</li>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>:  Pass disable_cache to disable encoder caching</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>An elasticsearch script_score query\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"fullname": "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping", "modulename": "debeir.interfaces.query", "qualname": "GenericElasticsearchQuery.get_id_mapping", "type": "function", "doc": "<p>Get the document ID</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>hit</strong>:  The raw document result</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>The document's ID\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">hit</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models": {"fullname": "debeir.models", "modulename": "debeir.models", "type": "module", "doc": "<p></p>\n"}, "debeir.models.colbert": {"fullname": "debeir.models.colbert", "modulename": "debeir.models.colbert", "type": "module", "doc": "<p></p>\n"}, "debeir.models.colbert.CoLBERTConfig": {"fullname": "debeir.models.colbert.CoLBERTConfig", "modulename": "debeir.models.colbert", "qualname": "CoLBERTConfig", "type": "class", "doc": "<p></p>\n"}, "debeir.models.colbert.CoLBERTConfig.__init__": {"fullname": "debeir.models.colbert.CoLBERTConfig.__init__", "modulename": "debeir.models.colbert", "qualname": "CoLBERTConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.models.colbert.CoLBERTConfig.save": {"fullname": "debeir.models.colbert.CoLBERTConfig.save", "modulename": "debeir.models.colbert", "qualname": "CoLBERTConfig.save", "type": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fname</strong>:  file name</li>\n<li><strong>path</strong>:  Path to save</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;colbert_config.json&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.CoLBERTConfig.load": {"fullname": "debeir.models.colbert.CoLBERTConfig.load", "modulename": "debeir.models.colbert", "qualname": "CoLBERTConfig.load", "type": "function", "doc": "<p>Load the ColBERT config from path (don't point to file name just directory)</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">fname</span><span class=\"o\">=</span><span class=\"s1\">&#39;colbert_config.json&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ConvolutionalBlock": {"fullname": "debeir.models.colbert.ConvolutionalBlock", "modulename": "debeir.models.colbert", "qualname": "ConvolutionalBlock", "type": "class", "doc": "<p>Base class for all neural network modules.</p>\n\n<p>Your models should also subclass this class.</p>\n\n<p>Modules can also contain other Modules, allowing to nest them in\na tree structure. You can assign the submodules as regular attributes::</p>\n\n<pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\n</code></pre>\n\n<p>Submodules assigned in this way will be registered, and will have their\nparameters converted too when you call <code>to</code>, etc.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>As per the example above, an <code>__init__()</code> call to the parent class\nmust be made before assignment on the child.</p>\n\n</div>\n\n<p>:ivar training: Boolean represents whether this module is in training or\n                evaluation mode.\n:vartype training: bool</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"fullname": "debeir.models.colbert.ConvolutionalBlock.__init__", "modulename": "debeir.models.colbert", "qualname": "ConvolutionalBlock.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_channels</span>,</span><span class=\"param\">\t<span class=\"n\">out_channels</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">first_stride</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\tact_func=&lt;class &#x27;torch.nn.modules.activation.ReLU&#x27;&gt;</span>)</span>"}, "debeir.models.colbert.ConvolutionalBlock.forward": {"fullname": "debeir.models.colbert.ConvolutionalBlock.forward", "modulename": "debeir.models.colbert", "qualname": "ConvolutionalBlock.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.KMaxPool": {"fullname": "debeir.models.colbert.KMaxPool", "modulename": "debeir.models.colbert", "qualname": "KMaxPool", "type": "class", "doc": "<p>Base class for all neural network modules.</p>\n\n<p>Your models should also subclass this class.</p>\n\n<p>Modules can also contain other Modules, allowing to nest them in\na tree structure. You can assign the submodules as regular attributes::</p>\n\n<pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\n</code></pre>\n\n<p>Submodules assigned in this way will be registered, and will have their\nparameters converted too when you call <code>to</code>, etc.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>As per the example above, an <code>__init__()</code> call to the parent class\nmust be made before assignment on the child.</p>\n\n</div>\n\n<p>:ivar training: Boolean represents whether this module is in training or\n                evaluation mode.\n:vartype training: bool</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.models.colbert.KMaxPool.__init__": {"fullname": "debeir.models.colbert.KMaxPool.__init__", "modulename": "debeir.models.colbert", "qualname": "KMaxPool.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, "debeir.models.colbert.KMaxPool.forward": {"fullname": "debeir.models.colbert.KMaxPool.forward", "modulename": "debeir.models.colbert", "qualname": "KMaxPool.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.visualisation_dump": {"fullname": "debeir.models.colbert.visualisation_dump", "modulename": "debeir.models.colbert", "qualname": "visualisation_dump", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">argmax</span>, </span><span class=\"param\"><span class=\"n\">input_tensors</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ResidualBlock": {"fullname": "debeir.models.colbert.ResidualBlock", "modulename": "debeir.models.colbert", "qualname": "ResidualBlock", "type": "class", "doc": "<p>Base class for all neural network modules.</p>\n\n<p>Your models should also subclass this class.</p>\n\n<p>Modules can also contain other Modules, allowing to nest them in\na tree structure. You can assign the submodules as regular attributes::</p>\n\n<pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\n</code></pre>\n\n<p>Submodules assigned in this way will be registered, and will have their\nparameters converted too when you call <code>to</code>, etc.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>As per the example above, an <code>__init__()</code> call to the parent class\nmust be made before assignment on the child.</p>\n\n</div>\n\n<p>:ivar training: Boolean represents whether this module is in training or\n                evaluation mode.\n:vartype training: bool</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.models.colbert.ResidualBlock.__init__": {"fullname": "debeir.models.colbert.ResidualBlock.__init__", "modulename": "debeir.models.colbert", "qualname": "ResidualBlock.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">in_channels</span>,</span><span class=\"param\">\t<span class=\"n\">out_channels</span>,</span><span class=\"param\">\t<span class=\"n\">optional_shortcut</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_size</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\tact_func=&lt;class &#x27;torch.nn.modules.activation.ReLU&#x27;&gt;</span>)</span>"}, "debeir.models.colbert.ResidualBlock.forward": {"fullname": "debeir.models.colbert.ResidualBlock.forward", "modulename": "debeir.models.colbert", "qualname": "ResidualBlock.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ColBERT": {"fullname": "debeir.models.colbert.ColBERT", "modulename": "debeir.models.colbert", "qualname": "ColBERT", "type": "class", "doc": "<p>Base class for all neural network modules.</p>\n\n<p>Your models should also subclass this class.</p>\n\n<p>Modules can also contain other Modules, allowing to nest them in\na tree structure. You can assign the submodules as regular attributes::</p>\n\n<pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\n</code></pre>\n\n<p>Submodules assigned in this way will be registered, and will have their\nparameters converted too when you call <code>to</code>, etc.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>As per the example above, an <code>__init__()</code> call to the parent class\nmust be made before assignment on the child.</p>\n\n</div>\n\n<p>:ivar training: Boolean represents whether this module is in training or\n                evaluation mode.\n:vartype training: bool</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.models.colbert.ColBERT.__init__": {"fullname": "debeir.models.colbert.ColBERT.__init__", "modulename": "debeir.models.colbert", "qualname": "ColBERT.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bert_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">bert_model_kwargs</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">bert</span><span class=\"o\">.</span><span class=\"n\">configuration_bert</span><span class=\"o\">.</span><span class=\"n\">BertConfig</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_seq_len</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">optional_shortcut</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_neurons</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2048</span>,</span><span class=\"param\">\t<span class=\"n\">use_batch_norms</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">use_trans_blocks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">residual_kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dropout_perc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">act_func</span><span class=\"o\">=</span><span class=\"s1\">&#39;mish&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">loss_func</span><span class=\"o\">=</span><span class=\"s1\">&#39;cross_entropy_loss&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.models.colbert.ColBERT.forward": {"fullname": "debeir.models.colbert.ColBERT.forward", "modulename": "debeir.models.colbert", "qualname": "ColBERT.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ColBERT.from_config": {"fullname": "debeir.models.colbert.ColBERT.from_config", "modulename": "debeir.models.colbert", "qualname": "ColBERT.from_config", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">config_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ColBERT.from_pretrained": {"fullname": "debeir.models.colbert.ColBERT.from_pretrained", "modulename": "debeir.models.colbert", "qualname": "ColBERT.from_pretrained", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">output_dir</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ColBERT.save_pretrained": {"fullname": "debeir.models.colbert.ColBERT.save_pretrained", "modulename": "debeir.models.colbert", "qualname": "ColBERT.save_pretrained", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">output_dir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ComBERT": {"fullname": "debeir.models.colbert.ComBERT", "modulename": "debeir.models.colbert", "qualname": "ComBERT", "type": "class", "doc": "<p>Base class for all neural network modules.</p>\n\n<p>Your models should also subclass this class.</p>\n\n<p>Modules can also contain other Modules, allowing to nest them in\na tree structure. You can assign the submodules as regular attributes::</p>\n\n<pre><code>import torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super().__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\n</code></pre>\n\n<p>Submodules assigned in this way will be registered, and will have their\nparameters converted too when you call <code>to</code>, etc.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>As per the example above, an <code>__init__()</code> call to the parent class\nmust be made before assignment on the child.</p>\n\n</div>\n\n<p>:ivar training: Boolean represents whether this module is in training or\n                evaluation mode.\n:vartype training: bool</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.models.colbert.ComBERT.__init__": {"fullname": "debeir.models.colbert.ComBERT.__init__", "modulename": "debeir.models.colbert", "qualname": "ComBERT.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bert_model_args</span>,</span><span class=\"param\">\t<span class=\"n\">bert_model_kwargs</span>,</span><span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">bert</span><span class=\"o\">.</span><span class=\"n\">configuration_bert</span><span class=\"o\">.</span><span class=\"n\">BertConfig</span>,</span><span class=\"param\">\t<span class=\"n\">device</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_seq_len</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">optional_shortcut</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_neurons</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2048</span>,</span><span class=\"param\">\t<span class=\"n\">use_batch_norms</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">use_trans_blocks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">residual_kernel_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">dropout_perc</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">act_func</span><span class=\"o\">=</span><span class=\"s1\">&#39;mish&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">loss_func</span><span class=\"o\">=</span><span class=\"s1\">&#39;cross_entropy_loss&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">num_blocks</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.models.colbert.ComBERT.forward": {"fullname": "debeir.models.colbert.ComBERT.forward", "modulename": "debeir.models.colbert", "qualname": "ComBERT.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ComBERT.from_config": {"fullname": "debeir.models.colbert.ComBERT.from_config", "modulename": "debeir.models.colbert", "qualname": "ComBERT.from_config", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">config_path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ComBERT.from_pretrained": {"fullname": "debeir.models.colbert.ComBERT.from_pretrained", "modulename": "debeir.models.colbert", "qualname": "ComBERT.from_pretrained", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">output_dir</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.models.colbert.ComBERT.save_pretrained": {"fullname": "debeir.models.colbert.ComBERT.save_pretrained", "modulename": "debeir.models.colbert", "qualname": "ComBERT.save_pretrained", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">output_dir</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.rankers": {"fullname": "debeir.rankers", "modulename": "debeir.rankers", "type": "module", "doc": "<p>Rankers module.</p>\n\n<blockquote>\n  <p>Includes runnable out-of-box training code\n  Custom ranking loss functions (e.g. LambdaLoss, NDCGLoss)\n  Includes custom rankers for reranking or NIR-style queries.</p>\n</blockquote>\n"}, "debeir.rankers.reranking": {"fullname": "debeir.rankers.reranking", "modulename": "debeir.rankers.reranking", "type": "module", "doc": "<p></p>\n"}, "debeir.rankers.reranking.nir": {"fullname": "debeir.rankers.reranking.nir", "modulename": "debeir.rankers.reranking.nir", "type": "module", "doc": "<p>NIR Reranker</p>\n\n<p>[Insert paper link here]</p>\n"}, "debeir.rankers.reranking.nir.NIReRanker": {"fullname": "debeir.rankers.reranking.nir.NIReRanker", "modulename": "debeir.rankers.reranking.nir", "qualname": "NIReRanker", "type": "class", "doc": "<p>Re-ranker which uses the NIR scoring method\n    score = log(bm25)/log(z) + cosine_sum</p>\n", "bases": "debeir.rankers.reranking.reranker.DocumentReRanker"}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"fullname": "debeir.rankers.reranking.nir.NIReRanker.__init__", "modulename": "debeir.rankers.reranking.nir", "qualname": "NIReRanker.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query</span>,</span><span class=\"param\">\t<span class=\"n\">ranked_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">Document</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">encoder</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span>,</span><span class=\"param\">\t<span class=\"n\">distance_fn</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">cosine</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">facets_weights</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.rankers.reranking.reranker": {"fullname": "debeir.rankers.reranking.reranker", "modulename": "debeir.rankers.reranking.reranker", "type": "module", "doc": "<p>General re-ranking interfaces to be implemented by child classes.</p>\n"}, "debeir.rankers.reranking.reranker.ReRanker": {"fullname": "debeir.rankers.reranking.reranker.ReRanker", "modulename": "debeir.rankers.reranking.reranker", "qualname": "ReRanker", "type": "class", "doc": "<p>General interface for a reranking.</p>\n\n<p>Child classes should implement the abstract methods.</p>\n"}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"fullname": "debeir.rankers.reranking.reranker.ReRanker.__init__", "modulename": "debeir.rankers.reranking.reranker", "qualname": "ReRanker.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">query</span>, </span><span class=\"param\"><span class=\"n\">ranked_list</span><span class=\"p\">:</span> <span class=\"n\">List</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"fullname": "debeir.rankers.reranking.reranker.ReRanker.rerank", "modulename": "debeir.rankers.reranking.reranker", "qualname": "ReRanker.rerank", "type": "function", "doc": "<p>Re-ranks the internal list</p>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"fullname": "debeir.rankers.reranking.reranker.ReRanker.rrerank", "modulename": "debeir.rankers.reranking.reranker", "qualname": "ReRanker.rrerank", "type": "function", "doc": "<p>Re-rank the passed ranked list based on implemented private _compute_scores method.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ranked_list</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A ranked list in descending order of the score field (which will be the last item in the list)\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">ranked_list</span><span class=\"p\">:</span> <span class=\"n\">List</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span>:</span></span>", "funcdef": "def"}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"fullname": "debeir.rankers.reranking.reranker.DocumentReRanker", "modulename": "debeir.rankers.reranking.reranker", "qualname": "DocumentReRanker", "type": "class", "doc": "<p>Reranking interface for a ranked list of Document objects.</p>\n", "bases": "ReRanker"}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"fullname": "debeir.rankers.reranking.reranker.DocumentReRanker.__init__", "modulename": "debeir.rankers.reranking.reranker", "qualname": "DocumentReRanker.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">query</span>,</span><span class=\"param\">\t<span class=\"n\">ranked_list</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">interfaces</span><span class=\"o\">.</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">Document</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.rankers.reranking.use": {"fullname": "debeir.rankers.reranking.use", "modulename": "debeir.rankers.reranking.use", "type": "module", "doc": "<p></p>\n"}, "debeir.rankers.reranking.use.USEReRanker": {"fullname": "debeir.rankers.reranking.use.USEReRanker", "modulename": "debeir.rankers.reranking.use", "qualname": "USEReRanker", "type": "class", "doc": "<p>Re-ranks based on the cosine_sum rather the complete NIR scoring</p>\n", "bases": "debeir.rankers.reranking.nir.NIReRanker"}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"fullname": "debeir.rankers.reranking.use.USEReRanker.__init__", "modulename": "debeir.rankers.reranking.use", "qualname": "USEReRanker.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "debeir.rankers.transformer_sent_encoder": {"fullname": "debeir.rankers.transformer_sent_encoder", "modulename": "debeir.rankers.transformer_sent_encoder", "type": "module", "doc": "<p></p>\n"}, "debeir.rankers.transformer_sent_encoder.Encoder": {"fullname": "debeir.rankers.transformer_sent_encoder.Encoder", "modulename": "debeir.rankers.transformer_sent_encoder", "qualname": "Encoder", "type": "class", "doc": "<p>A wrapper for the Sentence Transformer Encoder used in Universal Sentence Embeddings (USE) for ranking or reranking.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_path</strong>:  The path to a sentence transformer or transformer model.</li>\n<li><strong>normalize</strong>:  Normalize the output vectors to unit length for dot product retrieval rather than cosine.</li>\n<li><strong>spacy_model</strong>:  the spacy or scispacy model to use for sentence boundary detection.</li>\n<li><strong>max_length</strong>:  Maximum input length for the spacy nlp model.</li>\n</ul>\n"}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"fullname": "debeir.rankers.transformer_sent_encoder.Encoder.__init__", "modulename": "debeir.rankers.transformer_sent_encoder", "qualname": "Encoder.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_path</span>,</span><span class=\"param\">\t<span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spacy_model</span><span class=\"o\">=</span><span class=\"s1\">&#39;en_core_sci_md&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">2000000</span></span>)</span>"}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"fullname": "debeir.rankers.transformer_sent_encoder.Encoder.encode", "modulename": "debeir.rankers.transformer_sent_encoder", "qualname": "Encoder.encode", "type": "variable", "doc": "<p>Computes sentence embeddings for a given topic, uses spacy for sentence segmentation.\nBy default, uses a cache to store previously computed vectors. Pass \"disable_cache\" as a kwarg to disable this.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic</strong>:  The topic (a list of sentences) to encode. Should be a raw string.</li>\n<li><strong>disable_cache</strong>:  keyword argument, pass as True to disable encoding caching.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns a list of encoded tensors is returned.\n</code></pre>\n</blockquote>\n", "default_value": " = &lt;analysis_tools_ir.utils.cache._Cache object&gt;"}, "debeir.training": {"fullname": "debeir.training", "modulename": "debeir.training", "type": "module", "doc": "<p>Runnable out-of-the-box code for training re-rankers.</p>\n"}, "debeir.training.evaluate_reranker": {"fullname": "debeir.training.evaluate_reranker", "modulename": "debeir.training.evaluate_reranker", "type": "module", "doc": "<p></p>\n"}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"fullname": "debeir.training.evaluate_reranker.SentenceEvaluator", "modulename": "debeir.training.evaluate_reranker", "qualname": "SentenceEvaluator", "type": "class", "doc": "<p>Evaluation class for computing metrics from TREC-style files</p>\n", "bases": "debeir.evaluation.evaluator.Evaluator"}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"fullname": "debeir.training.evaluate_reranker.SentenceEvaluator.__init__", "modulename": "debeir.training.evaluate_reranker", "qualname": "SentenceEvaluator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">rankers</span><span class=\"o\">.</span><span class=\"n\">transformer_sent_encoder</span><span class=\"o\">.</span><span class=\"n\">Encoder</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">parsed_topics</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">text_cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">query_cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">id_col</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">distance_fn</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">qrels</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">metrics</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"fullname": "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists", "modulename": "debeir.training.evaluate_reranker", "qualname": "SentenceEvaluator.produce_ranked_lists", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning": {"fullname": "debeir.training.hparm_tuning", "modulename": "debeir.training.hparm_tuning", "type": "module", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.config": {"fullname": "debeir.training.hparm_tuning.config", "modulename": "debeir.training.hparm_tuning.config", "type": "module", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.config.HparamConfig": {"fullname": "debeir.training.hparm_tuning.config.HparamConfig", "modulename": "debeir.training.hparm_tuning.config", "qualname": "HparamConfig", "type": "class", "doc": "<p>Hyperparameter configuration file</p>\n\n<p>Expects a dictionary of hyperparameters</p>\n\n<p>hparams: Dict\n{\n    \"learning_rate\": {\n       \"type\": float\n       \"low\": 0.1\n       \"high\": 1.0\n       \"step\": 0.1\n       # OR\n       args: [0.1, 1.0, 0.1]\n    },\n}</p>\n", "bases": "debeir.interfaces.config.Config"}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"fullname": "debeir.training.hparm_tuning.config.HparamConfig.__init__", "modulename": "debeir.training.hparm_tuning.config", "qualname": "HparamConfig.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">hparams</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span></span>)</span>"}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"fullname": "debeir.training.hparm_tuning.config.HparamConfig.from_json", "modulename": "debeir.training.hparm_tuning.config", "qualname": "HparamConfig.from_json", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">fp</span></span><span class=\"return-annotation\">) -> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"o\">.</span><span class=\"n\">hparm_tuning</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">HparamConfig</span>:</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"fullname": "debeir.training.hparm_tuning.config.HparamConfig.validate", "modulename": "debeir.training.hparm_tuning.config", "qualname": "HparamConfig.validate", "type": "function", "doc": "<p>Validates if the config is correct.\nMust be implemented by inherited classes.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"fullname": "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py", "modulename": "debeir.training.hparm_tuning.config", "qualname": "HparamConfig.parse_config_to_py", "type": "function", "doc": "<p>Parses configuration file into usable python objects</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.optuna_rank": {"fullname": "debeir.training.hparm_tuning.optuna_rank", "modulename": "debeir.training.hparm_tuning.optuna_rank", "type": "module", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.optuna_rank.objective": {"fullname": "debeir.training.hparm_tuning.optuna_rank.objective", "modulename": "debeir.training.hparm_tuning.optuna_rank", "qualname": "objective", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">trainer</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"o\">.</span><span class=\"n\">hparm_tuning</span><span class=\"o\">.</span><span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">Trainer</span>,</span><span class=\"param\">\t<span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"fullname": "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb", "modulename": "debeir.training.hparm_tuning.optuna_rank", "qualname": "run_optuna_with_wandb", "type": "function", "doc": "<p>Partially initialize the objective function with a trainer and hparams to optimize.</p>\n\n<p>Optimize using the optuna library.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>trainer</strong>: </li>\n<li><strong>n_trials</strong>: </li>\n<li><strong>maximize_objective</strong>: </li>\n<li><strong>wandb_kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">trainer</span>,</span><span class=\"param\">\t<span class=\"n\">n_trials</span><span class=\"o\">=</span><span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">maximize_objective</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">save_study_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">wandb_kwargs</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"fullname": "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats", "modulename": "debeir.training.hparm_tuning.optuna_rank", "qualname": "print_optuna_stats", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">study</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">study</span><span class=\"o\">.</span><span class=\"n\">study</span><span class=\"o\">.</span><span class=\"n\">Study</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer": {"fullname": "debeir.training.hparm_tuning.trainer", "modulename": "debeir.training.hparm_tuning.trainer", "type": "module", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"fullname": "debeir.training.hparm_tuning.trainer.OptimizersWrapper", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "OptimizersWrapper", "type": "class", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"fullname": "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "OptimizersWrapper.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.training.hparm_tuning.trainer.Trainer": {"fullname": "debeir.training.hparm_tuning.trainer.Trainer", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "Trainer", "type": "class", "doc": "<p>Wrapper class for a trainer class.</p>\n"}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"fullname": "debeir.training.hparm_tuning.trainer.Trainer.__init__", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "Trainer.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">evaluator_fn</span>, </span><span class=\"param\"><span class=\"n\">dataset_loading_fn</span></span>)</span>"}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"fullname": "debeir.training.hparm_tuning.trainer.Trainer.fit", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "Trainer.fit", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">in_trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span>,</span><span class=\"param\">\t<span class=\"n\">train_dataset</span>,</span><span class=\"param\">\t<span class=\"n\">val_dataset</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerHparamTrainer", "type": "class", "doc": "<p>See Optuna documentation for types!</p>\n", "bases": "Trainer"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerHparamTrainer.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset_loading_fn</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator_fn</span>,</span><span class=\"param\">\t<span class=\"n\">hparams_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"o\">.</span><span class=\"n\">hparm_tuning</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">HparamConfig</span></span>)</span>"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerHparamTrainer.get_optuna_hparams", "type": "function", "doc": "<p>Get hyperparameters suggested by the optuna library</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>trial</strong>:  The optuna trial object</li>\n<li><strong>hparams</strong>:  Optional, pass a dictionary of HparamType[Enum] objects</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span>,</span><span class=\"param\">\t<span class=\"n\">hparams</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"o\">.</span><span class=\"n\">hparm_tuning</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">Hparam</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerHparamTrainer.build_kwargs_and_model", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">hparams</span><span class=\"p\">:</span> <span class=\"n\">Dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerHparamTrainer.fit", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">in_trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span>,</span><span class=\"param\">\t<span class=\"n\">train_dataset</span>,</span><span class=\"param\">\t<span class=\"n\">val_dataset</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer.trial_callback": {"fullname": "debeir.training.hparm_tuning.trainer.trial_callback", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "trial_callback", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">trial</span>, </span><span class=\"param\"><span class=\"n\">score</span>, </span><span class=\"param\"><span class=\"n\">epoch</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerTrainer", "type": "class", "doc": "<p>See Optuna documentation for types!</p>\n", "bases": "SentenceTransformerHparamTrainer"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerTrainer.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">dataset_dict</span><span class=\"o\">.</span><span class=\"n\">DatasetDict</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">hparams_config</span><span class=\"p\">:</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">training</span><span class=\"o\">.</span><span class=\"n\">hparm_tuning</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">HparamConfig</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator_fn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_wandb</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"fullname": "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit", "modulename": "debeir.training.hparm_tuning.trainer", "qualname": "SentenceTransformerTrainer.fit", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">extra_kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types": {"fullname": "debeir.training.hparm_tuning.types", "modulename": "debeir.training.hparm_tuning.types", "type": "module", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.types.Hparam": {"fullname": "debeir.training.hparm_tuning.types.Hparam", "modulename": "debeir.training.hparm_tuning.types", "qualname": "Hparam", "type": "class", "doc": "<p></p>\n"}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"fullname": "debeir.training.hparm_tuning.types.Hparam.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "Hparam.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"fullname": "debeir.training.hparm_tuning.types.Hparam.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "Hparam.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamFloat": {"fullname": "debeir.training.hparm_tuning.types.HparamFloat", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamFloat", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamFloat.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamFloat.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">high</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamFloat.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamFloat.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamInt": {"fullname": "debeir.training.hparm_tuning.types.HparamInt", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamInt", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamInt.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamInt.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">high</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamInt.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamInt.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamCategorical": {"fullname": "debeir.training.hparm_tuning.types.HparamCategorical", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamCategorical", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamCategorical.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamCategorical.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">choices</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;suggest_categorical&#39;</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamCategorical.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamCategorical.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamUniform": {"fullname": "debeir.training.hparm_tuning.types.HparamUniform", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamUniform", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamUniform.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamUniform.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">high</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;suggest_uniform&#39;</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamUniform.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamUniform.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"fullname": "debeir.training.hparm_tuning.types.HparamLogUniform", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamLogUniform", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamLogUniform.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamLogUniform.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">high</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;suggest_loguniform&#39;</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamLogUniform.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamLogUniform.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"fullname": "debeir.training.hparm_tuning.types.HparamDiscreteUniform", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamDiscreteUniform", "type": "class", "doc": "<p></p>\n", "bases": "Hparam"}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"fullname": "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamDiscreteUniform.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">low</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">high</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">q</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;suggest_discrete_uniform&#39;</span></span>)</span>"}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"fullname": "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest", "modulename": "debeir.training.hparm_tuning.types", "qualname": "HparamDiscreteUniform.suggest", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">trial</span><span class=\"p\">:</span> <span class=\"n\">optuna</span><span class=\"o\">.</span><span class=\"n\">trial</span><span class=\"o\">.</span><span class=\"n\">_trial</span><span class=\"o\">.</span><span class=\"n\">Trial</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses": {"fullname": "debeir.training.losses", "modulename": "debeir.training.losses", "type": "module", "doc": "<p></p>\n"}, "debeir.training.losses.contrastive": {"fullname": "debeir.training.losses.contrastive", "modulename": "debeir.training.losses.contrastive", "type": "module", "doc": "<p>Author: Yonglong Tian (yonglong@mit.edu)\nDate: May 07, 2020</p>\n\n<p>Code imported from: <a href=\"https://github.com/HobbitLong/SupContrast/blob/master/losses.py\">https://github.com/HobbitLong/SupContrast/blob/master/losses.py</a></p>\n"}, "debeir.training.losses.contrastive.SupConLoss": {"fullname": "debeir.training.losses.contrastive.SupConLoss", "modulename": "debeir.training.losses.contrastive", "qualname": "SupConLoss", "type": "class", "doc": "<p>Supervised Contrastive Learning: <a href=\"https://arxiv.org/pdf/2004.11362.pdf\">https://arxiv.org/pdf/2004.11362.pdf</a>.\nIt also supports the unsupervised contrastive loss in SimCLR</p>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"fullname": "debeir.training.losses.contrastive.SupConLoss.__init__", "modulename": "debeir.training.losses.contrastive", "qualname": "SupConLoss.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">temperature</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">contrast_mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;all&#39;</span>, </span><span class=\"param\"><span class=\"n\">base_temperature</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span>)</span>"}, "debeir.training.losses.contrastive.SupConLoss.forward": {"fullname": "debeir.training.losses.contrastive.SupConLoss.forward", "modulename": "debeir.training.losses.contrastive", "qualname": "SupConLoss.forward", "type": "function", "doc": "<p>Compute loss for model. If both <code>labels</code> and <code>mask</code> are None,\nit degenerates to SimCLR unsupervised loss:\n<a href=\"https://arxiv.org/pdf/2002.05709.pdf\">https://arxiv.org/pdf/2002.05709.pdf</a>\nArgs:\n    features: hidden vector of shape [bsz, n_views, ...].\n    labels: ground truth of shape [bsz].\n    mask: contrastive mask of shape [bsz, bsz], mask_{i,j}=1 if sample j\n        has the same class as sample i. Can be asymmetric.\nReturns:\n    A loss scalar.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">features</span>, </span><span class=\"param\"><span class=\"n\">labels</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">mask</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"fullname": "debeir.training.losses.contrastive.SiameseDistanceMetric", "modulename": "debeir.training.losses.contrastive", "qualname": "SiameseDistanceMetric", "type": "class", "doc": "<p>The metric for the contrastive loss</p>\n", "bases": "enum.Enum"}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"fullname": "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN", "modulename": "debeir.training.losses.contrastive", "qualname": "SiameseDistanceMetric.EUCLIDEAN", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"fullname": "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN", "modulename": "debeir.training.losses.contrastive", "qualname": "SiameseDistanceMetric.MANHATTAN", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"fullname": "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE", "modulename": "debeir.training.losses.contrastive", "qualname": "SiameseDistanceMetric.COSINE_DISTANCE", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"fullname": "debeir.training.losses.contrastive.ContrastiveSentLoss", "modulename": "debeir.training.losses.contrastive", "qualname": "ContrastiveSentLoss", "type": "class", "doc": "<p>Contrastive loss. Expects as input two texts and a label of either 0 or 1. If the label == 1, then the distance between the\ntwo embeddings is reduced. If the label == 0, then the distance between the embeddings is increased.\nFurther information: <a href=\"http://yann.lecun.com/exdb/publis/pdf/hadsell-chopra-lecun-06.pdf\">http://yann.lecun.com/exdb/publis/pdf/hadsell-chopra-lecun-06.pdf</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong>:  SentenceTransformer model</li>\n<li><strong>distance_metric</strong>:  Function that returns a distance between two emeddings. The class SiameseDistanceMetric contains pre-defined metrices that can be used</li>\n<li><strong>margin</strong>:  Negative samples (label == 0) should have a distance of at least the margin value.</li>\n<li><strong>size_average</strong>:  Average by the size of the mini-batch.\nExample::\nfrom sentence_transformers import SentenceTransformer, LoggingHandler, losses, InputExample\nfrom torch.utils.data import DataLoader\nmodel = SentenceTransformer('all-MiniLM-L6-v2')\ntrain_examples = [\n    InputExample(texts=['This is a positive pair', 'Where the distance will be minimized'], label=1),\n    InputExample(texts=['This is a negative pair', 'Their distance will be increased'], label=0)]\ntrain_dataloader = DataLoader(train_examples, shuffle=True, batch_size=2)\ntrain_loss = losses.ContrastiveLoss(model=model)\nmodel.fit([(train_dataloader, train_loss)], show_progress_bar=True)</li>\n</ul>\n", "bases": "torch.nn.modules.module.Module"}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"fullname": "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__", "modulename": "debeir.training.losses.contrastive", "qualname": "ContrastiveSentLoss.__init__", "type": "function", "doc": "<p>Initializes internal Module state, shared by both nn.Module and ScriptModule.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">distance_metric</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">SiameseDistanceMetric</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">size_average</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"fullname": "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict", "modulename": "debeir.training.losses.contrastive", "qualname": "ContrastiveSentLoss.get_config_dict", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"fullname": "debeir.training.losses.contrastive.ContrastiveSentLoss.forward", "modulename": "debeir.training.losses.contrastive", "qualname": "ContrastiveSentLoss.forward", "type": "function", "doc": "<p>Defines the computation performed at every call.</p>\n\n<p>Should be overridden by all subclasses.</p>\n\n<div class=\"pdoc-alert pdoc-alert-note\">\n\n<p>Although the recipe for forward pass needs to be defined within\nthis function, one should call the <code>Module</code> instance afterwards\ninstead of this since the former takes care of running the\nregistered hooks while the latter silently ignores them.</p>\n\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sentence_features</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">labels</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">Tensor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.losses.ranking": {"fullname": "debeir.training.losses.ranking", "modulename": "debeir.training.losses.ranking", "type": "module", "doc": "<p>Losses are drawn from the allrank library</p>\n"}, "debeir.training.train_reranker": {"fullname": "debeir.training.train_reranker", "modulename": "debeir.training.train_reranker", "type": "module", "doc": "<p></p>\n"}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"fullname": "debeir.training.train_reranker.train_cross_encoder_reranker", "modulename": "debeir.training.train_reranker", "qualname": "train_cross_encoder_reranker", "type": "function", "doc": "<p>Trains a reranker with relevance signals</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_fp_or_name</strong>:  The model name or path to the model</li>\n<li><strong>output_dir</strong>:  Output directory to save model, logs etc.</li>\n<li><strong>train_dataset</strong>:  Training Examples</li>\n<li><strong>dev_dataset</strong>:  Dev examples</li>\n<li><strong>train_batch_size</strong>:  Training batch size</li>\n<li><strong>num_epochs</strong>:  Number of epochs</li>\n<li><strong>warmup_steps</strong>:  Warmup steps for the scheduler</li>\n<li><strong>evaluate_every_n_step</strong>:  Evaluate the model every n steps</li>\n<li><strong>special_tokens</strong>:  Special tokens to add, defaults to [DOC], [QRY] tokens (bi-encoder)</li>\n<li><strong>pooling_mode</strong>:  Pooling mode for a sentence transformer model</li>\n<li><strong>loss_func</strong>:  Loss function(s) to use</li>\n<li><strong>evaluator</strong>:  Evaluator to use</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_fp_or_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">train_dataset</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">RelevanceExample</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dev_dataset</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">RelevanceExample</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">train_batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">warmup_steps</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate_every_n_step</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">special_tokens</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pooling_mode</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_func</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator</span><span class=\"p\">:</span> <span class=\"n\">sentence_transformers</span><span class=\"o\">.</span><span class=\"n\">evaluation</span><span class=\"o\">.</span><span class=\"n\">SentenceEvaluator</span><span class=\"o\">.</span><span class=\"n\">SentenceEvaluator</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.train_sentence_encoder": {"fullname": "debeir.training.train_sentence_encoder", "modulename": "debeir.training.train_sentence_encoder", "type": "module", "doc": "<p></p>\n"}, "debeir.training.train_sentence_encoder.train_biencoder": {"fullname": "debeir.training.train_sentence_encoder.train_biencoder", "modulename": "debeir.training.train_sentence_encoder", "qualname": "train_biencoder", "type": "function", "doc": "<p>Train a universal sentence encoder</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_fp_or_name</strong>:  The model name or path to the model</li>\n<li><strong>output_dir</strong>:  Output directory to save model, logs etc.</li>\n<li><strong>train_examples</strong>:  Training Examples</li>\n<li><strong>dev_examples</strong>:  Dev examples</li>\n<li><strong>train_batch_size</strong>:  Training batch size</li>\n<li><strong>num_epochs</strong>:  Number of epochs</li>\n<li><strong>warmup_steps</strong>:  Warmup steps for the scheduler</li>\n<li><strong>evaluate_every_n_step</strong>:  Evaluate the model every n steps</li>\n<li><strong>special_tokens</strong>:  Special tokens to add</li>\n<li><strong>pooling_mode</strong>:  Pooling mode for a sentence transformer model</li>\n<li><strong>loss_func</strong>:  Loss function(s) to use</li>\n<li><strong>evaluator</strong>:  Evaluator to use</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_fp_or_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">train_examples</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputExample</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">dev_examples</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputExample</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">train_batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">warmup_steps</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate_every_n_step</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">special_tokens</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pooling_mode</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_func</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">evaluator</span><span class=\"p\">:</span> <span class=\"n\">sentence_transformers</span><span class=\"o\">.</span><span class=\"n\">evaluation</span><span class=\"o\">.</span><span class=\"n\">SentenceEvaluator</span><span class=\"o\">.</span><span class=\"n\">SentenceEvaluator</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"fullname": "debeir.training.train_sentence_encoder.train_huggingface_transformer", "modulename": "debeir.training.train_sentence_encoder", "qualname": "train_huggingface_transformer", "type": "function", "doc": "<p>Train a transformer model using the Huggingface API</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model_fp_or_name_or_cls</strong>:  Model name or model class to instantiate</li>\n<li><strong>tokenizer</strong>:  Tokenizer</li>\n<li><strong>output_dir</strong>:  Output directory to write to</li>\n<li><strong>compute_metric_fn</strong>:  Metric function to compute metrics</li>\n<li><strong>metric</strong>:  Metric used by the compute_metric_fn</li>\n<li><strong>dataset</strong>:  Huggingface Dataset Dict</li>\n<li><strong>train_dataset</strong>:  Training dataset to be used by the Trainer class</li>\n<li><strong>eval_dataset</strong>:  Evaluation dataset to be used by the Trainer class</li>\n<li><strong>train_batch_size</strong>:  Batch size to use for training</li>\n<li><strong>num_epochs: Number of training epochs (default</strong>:  3)</li>\n<li><strong>learning_rate: Learning rate (default</strong>:  5e-5)</li>\n<li><strong>lr_scheduler_type</strong>:  Learning rate type, see SchedulerType</li>\n<li><strong>optimizer</strong>:  Optimizer</li>\n<li><strong>warmup_ratio</strong>:  Warmup ratios as ratio of steps (default 0.1)</li>\n<li><strong>evaluate_every_n_step</strong>:  Number of steps to evaluate</li>\n<li><strong>pooling_mode</strong>:  Pooling mode for your model</li>\n<li><strong>loss_func</strong>:  Loss function to instantiate model</li>\n<li><strong>model_args</strong>:  Model arguments to pass</li>\n<li><strong>model_kwargs</strong>:  Model keyword arguments</li>\n<li><strong>padding_strategy</strong>:  Tokenization padding strategy</li>\n<li><strong>truncate</strong>:  Truncate tokenization strategy</li>\n<li><strong>special_tokens</strong>:  Special tokens to add to the tokenizer</li>\n<li><strong>seed</strong>:  Dataset shuffle seed</li>\n<li><strong>args</strong>: </li>\n<li><strong>kwargs</strong>: </li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_fp_or_name_or_cls</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">modeling_utils</span><span class=\"o\">.</span><span class=\"n\">PreTrainedModel</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">tokenizer</span><span class=\"p\">:</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">tokenization_utils</span><span class=\"o\">.</span><span class=\"n\">PreTrainedTokenizer</span>,</span><span class=\"param\">\t<span class=\"n\">output_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">compute_metric_fn</span>,</span><span class=\"param\">\t<span class=\"n\">metric</span><span class=\"p\">:</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">metric</span><span class=\"o\">.</span><span class=\"n\">Metric</span>,</span><span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">dataset_dict</span><span class=\"o\">.</span><span class=\"n\">DatasetDict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">train_dataset</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">RelevanceExample</span><span class=\"p\">,</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputExample</span><span class=\"p\">,</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">eval_dataset</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">RelevanceExample</span><span class=\"p\">,</span> <span class=\"n\">debeir</span><span class=\"o\">.</span><span class=\"n\">data_sets</span><span class=\"o\">.</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">InputExample</span><span class=\"p\">,</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">train_batch_size</span><span class=\"o\">=</span><span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">num_epochs</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">learning_rate</span><span class=\"o\">=</span><span class=\"mf\">5e-05</span>,</span><span class=\"param\">\t<span class=\"n\">lr_scheduler_type</span><span class=\"p\">:</span> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">trainer_utils</span><span class=\"o\">.</span><span class=\"n\">SchedulerType</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">SchedulerType</span><span class=\"o\">.</span><span class=\"n\">CONSTANT_WITH_WARMUP</span><span class=\"p\">:</span> <span class=\"s1\">&#39;constant_with_warmup&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;adamw_hf&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">warmup_ratio</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate_every_n_step</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">pooling_mode</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">loss_func</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_args</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_kwargs</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">padding_strategy</span><span class=\"o\">=</span><span class=\"s1\">&#39;max_length&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">truncate</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">special_tokens</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">seed</span><span class=\"o\">=</span><span class=\"mi\">42</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">transformers</span><span class=\"o\">.</span><span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">Trainer</span>:</span></span>", "funcdef": "def"}, "debeir.training.utils": {"fullname": "debeir.training.utils", "modulename": "debeir.training.utils", "type": "module", "doc": "<p></p>\n"}, "debeir.training.utils.LoggingScheduler": {"fullname": "debeir.training.utils.LoggingScheduler", "modulename": "debeir.training.utils", "qualname": "LoggingScheduler", "type": "class", "doc": "<p></p>\n"}, "debeir.training.utils.LoggingScheduler.__init__": {"fullname": "debeir.training.utils.LoggingScheduler.__init__", "modulename": "debeir.training.utils", "qualname": "LoggingScheduler.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">optim</span><span class=\"o\">.</span><span class=\"n\">lr_scheduler</span><span class=\"o\">.</span><span class=\"n\">LambdaLR</span>,</span><span class=\"param\">\t<span class=\"n\">wandb</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">&#39;wandb&#39;</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;/home/vin/PycharmProjects/NIR/venv/lib/python3.10/site-packages/wandb/__init__.py&#39;</span><span class=\"o\">&gt;</span></span>)</span>"}, "debeir.training.utils.LoggingScheduler.step": {"fullname": "debeir.training.utils.LoggingScheduler.step", "modulename": "debeir.training.utils", "qualname": "LoggingScheduler.step", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">epoch</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.utils.get_scheduler_with_wandb": {"fullname": "debeir.training.utils.get_scheduler_with_wandb", "modulename": "debeir.training.utils", "qualname": "get_scheduler_with_wandb", "type": "function", "doc": "<p>Returns the correct learning rate scheduler. Available scheduler: constantlr, warmupconstant, warmuplinear, warmupcosine, warmupcosinewithhardrestarts</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">wdb</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">&#39;wandb&#39;</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;/home/vin/PycharmProjects/NIR/venv/lib/python3.10/site-packages/wandb/__init__.py&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span>,</span><span class=\"param\">\t<span class=\"n\">scheduler</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">warmup_steps</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">t_total</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.utils.LoggingLoss": {"fullname": "debeir.training.utils.LoggingLoss", "modulename": "debeir.training.utils", "qualname": "LoggingLoss", "type": "class", "doc": "<p></p>\n"}, "debeir.training.utils.LoggingLoss.__init__": {"fullname": "debeir.training.utils.LoggingLoss.__init__", "modulename": "debeir.training.utils", "qualname": "LoggingLoss.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loss_fn</span>,</span><span class=\"param\">\t<span class=\"n\">wandb</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">&#39;wandb&#39;</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;/home/vin/PycharmProjects/NIR/venv/lib/python3.10/site-packages/wandb/__init__.py&#39;</span><span class=\"o\">&gt;</span></span>)</span>"}, "debeir.training.utils.TokenizerOverload": {"fullname": "debeir.training.utils.TokenizerOverload", "modulename": "debeir.training.utils", "qualname": "TokenizerOverload", "type": "class", "doc": "<p></p>\n"}, "debeir.training.utils.TokenizerOverload.__init__": {"fullname": "debeir.training.utils.TokenizerOverload.__init__", "modulename": "debeir.training.utils", "qualname": "TokenizerOverload.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokenizer</span>, </span><span class=\"param\"><span class=\"n\">tokenizer_kwargs</span>, </span><span class=\"param\"><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, "debeir.training.utils.LoggingEvaluator": {"fullname": "debeir.training.utils.LoggingEvaluator", "modulename": "debeir.training.utils", "qualname": "LoggingEvaluator", "type": "class", "doc": "<p></p>\n"}, "debeir.training.utils.LoggingEvaluator.__init__": {"fullname": "debeir.training.utils.LoggingEvaluator.__init__", "modulename": "debeir.training.utils", "qualname": "LoggingEvaluator.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">evaluator</span>,</span><span class=\"param\">\t<span class=\"n\">wandb</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span> <span class=\"s1\">&#39;wandb&#39;</span> <span class=\"kn\">from</span> <span class=\"s1\">&#39;/home/vin/PycharmProjects/NIR/venv/lib/python3.10/site-packages/wandb/__init__.py&#39;</span><span class=\"o\">&gt;</span></span>)</span>"}, "debeir.training.utils.DatasetToSentTrans": {"fullname": "debeir.training.utils.DatasetToSentTrans", "modulename": "debeir.training.utils", "qualname": "DatasetToSentTrans", "type": "class", "doc": "<p></p>\n"}, "debeir.training.utils.DatasetToSentTrans.__init__": {"fullname": "debeir.training.utils.DatasetToSentTrans.__init__", "modulename": "debeir.training.utils", "qualname": "DatasetToSentTrans.__init__", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dataset</span><span class=\"p\">:</span> <span class=\"n\">datasets</span><span class=\"o\">.</span><span class=\"n\">arrow_dataset</span><span class=\"o\">.</span><span class=\"n\">Dataset</span>,</span><span class=\"param\">\t<span class=\"n\">text_cols</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">label_col</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "debeir.training.utils.tokenize_function": {"fullname": "debeir.training.utils.tokenize_function", "modulename": "debeir.training.utils", "qualname": "tokenize_function", "type": "function", "doc": "<p>Tokenizer function</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>tokenizer</strong>:  Tokenizer</li>\n<li><strong>examples</strong>:  Input examples to tokenize</li>\n<li><strong>padding_strategy</strong>:  Padding strategy</li>\n<li><strong>truncate</strong>:  Truncate sentences</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns a list of tokenized examples\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokenizer</span>, </span><span class=\"param\"><span class=\"n\">examples</span>, </span><span class=\"param\"><span class=\"n\">padding_strategy</span>, </span><span class=\"param\"><span class=\"n\">truncate</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.training.utils.get_max_seq_length": {"fullname": "debeir.training.utils.get_max_seq_length", "modulename": "debeir.training.utils", "qualname": "get_max_seq_length", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokenizer</span>, </span><span class=\"param\"><span class=\"n\">dataset</span>, </span><span class=\"param\"><span class=\"n\">x_labels</span>, </span><span class=\"param\"><span class=\"n\">dataset_key</span><span class=\"o\">=</span><span class=\"s1\">&#39;train&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.utils": {"fullname": "debeir.utils", "modulename": "debeir.utils", "type": "module", "doc": "<p>Common utilities such as score normalization and creating output directory w/ checks</p>\n"}, "debeir.utils.scaler": {"fullname": "debeir.utils.scaler", "modulename": "debeir.utils.scaler", "type": "module", "doc": "<p></p>\n"}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"fullname": "debeir.utils.scaler.unpack_elasticsearch_scores", "modulename": "debeir.utils.scaler", "qualname": "unpack_elasticsearch_scores", "type": "function", "doc": "<p>Helper function to retrieve the top score of documents for each topic.\nUsed in NIR weight adjustment calculation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>results</strong>:  Raw input of results from Elasticsearch library</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Returns a 1-D dictionary of {topic_num: top_score} pairs.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">results</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span>:</span></span>", "funcdef": "def"}, "debeir.utils.scaler.get_z_value": {"fullname": "debeir.utils.scaler.get_z_value", "modulename": "debeir.utils.scaler", "qualname": "get_z_value", "type": "function", "doc": "<p>Analytical solution for the normalization constant, z, used in NIR log normalization.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cosine_ceiling</strong>:  The highest theoretical additive cosine score</li>\n<li><strong>bm25_ceiling</strong>:  The highest BM25 score retrieved from a given topic OR an estimate.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>The normalization parameter for NIR log normalization.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cosine_ceiling</span>, </span><span class=\"param\"><span class=\"n\">bm25_ceiling</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "debeir.utils.utils": {"fullname": "debeir.utils.utils", "modulename": "debeir.utils.utils", "type": "module", "doc": "<p></p>\n"}, "debeir.utils.utils.create_output_file": {"fullname": "debeir.utils.utils.create_output_file", "modulename": "debeir.utils.utils", "qualname": "create_output_file", "type": "function", "doc": "<p>Create output file based on config instructions</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>config</strong>:  The config object with output file options.</li>\n<li><strong>config_fp</strong>:  The config file path used in default naming options for the output file.</li>\n<li><strong>remove</strong>:  Overwrites the output file if it exists</li>\n<li><strong>output_file</strong>:  The output file path if it exists</li>\n<li><strong>output_directory</strong>:  The output directory used for default naming (specified in nir config)</li>\n<li><strong>kwargs</strong>:  Compatibility arguments</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span>, </span><span class=\"param\"><span class=\"n\">config_fp</span>, </span><span class=\"param\"><span class=\"n\">remove</span>, </span><span class=\"param\"><span class=\"n\">output_file</span>, </span><span class=\"param\"><span class=\"n\">output_directory</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.utils.utils.unpack_coroutine": {"fullname": "debeir.utils.utils.unpack_coroutine", "modulename": "debeir.utils.utils", "qualname": "unpack_coroutine", "type": "function", "doc": "<p>Recursively unwraps co-routines until a result is reached.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>f</strong>:  Wrapped co-routine function.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>Results from the (final) evaluated co-routine.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "debeir.utils.utils.flatten": {"fullname": "debeir.utils.utils.flatten", "modulename": "debeir.utils.utils", "qualname": "flatten", "type": "function", "doc": "<p>Flattens a multidimensional dictionary (dictionary of dictionaries) to a single layer with child keys seperated by\n\"sep\"</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>d</strong>:  Multi-level dictionary to flatten.</li>\n<li><strong>parent_key</strong>:  Prepend a parent_key to all layers.</li>\n<li><strong>sep</strong>:  Seperator token between child and parent layers.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n<pre><code>A flattened 1-D dictionary with keys seperated by *sep*.\n</code></pre>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">d</span>, </span><span class=\"param\"><span class=\"n\">parent_key</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s1\">&#39;_&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "debeir.utils.utils.remove_excess_whitespace": {"fullname": "debeir.utils.utils.remove_excess_whitespace", "modulename": "debeir.utils.utils", "qualname": "remove_excess_whitespace", "type": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">s</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"debeir": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 48}, "debeir.data_sets": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 53}, "debeir.data_sets.bioreddit": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 18}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 18}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 488, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 82}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 32}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 65}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 33}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 100}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 183, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 18}, "debeir.data_sets.factory": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.factory.get_index_name": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 31}, "debeir.data_sets.factory.factory_fn": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 58}, "debeir.data_sets.factory.config_factory": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 55}, "debeir.data_sets.factory.get_nir_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.data_sets.factory.apply_nir_config": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 40}, "debeir.data_sets.marco": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 181, "bases": 0, "doc": 3}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 52}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 62}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 70, "bases": 0, "doc": 26}, "debeir.data_sets.marco.MarcoQueryConfig": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 3}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 424, "bases": 0, "doc": 3}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 82}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 32}, "debeir.data_sets.trec_clinical_trials": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 23}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "debeir.data_sets.trec_covid": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.trec_covid.TrecCovidParser": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 18}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 23}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 3}, "debeir.data_sets.types": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.types.InputExample": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "debeir.data_sets.types.InputExample.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 42}, "debeir.data_sets.types.InputExample.get_label": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.data_sets.types.InputExample.to_dict": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 3}, "debeir.data_sets.types.InputExample.from_parser_output": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.data_sets.types.RelevanceExample": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "debeir.data_sets.types.RelevanceExample.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 42}, "debeir.data_sets.types.RelevanceExample.get_label": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.data_sets.types.RelevanceExample.relevance": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "debeir.data_sets.types.DatasetTypes": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 15}, "debeir.data_sets.utils": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.data_sets.utils.CrossValidatorDataset": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 100, "bases": 0, "doc": 116}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 31}, "debeir.engines": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "debeir.engines.client": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.client.Client": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "debeir.engines.client.Client.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 3}, "debeir.engines.client.Client.build_from_config": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 31}, "debeir.engines.client.Client.get_client": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.engines.client.Client.close": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "debeir.engines.dummyindex": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.DummyIndex": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.DummyIndex.query": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.engines.dummyindex.index.es_isup": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.change_bm25": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 112}, "debeir.engines.elasticsearch.executor": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 46}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 201, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 28}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 26}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 175}, "debeir.engines.elasticsearch.generate_script_score": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 21}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 53}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 33}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 30}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 48}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 35}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"qualname": 2, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 60}, "debeir.engines.solr": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.evaluation": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "debeir.evaluation.cross_validation": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.evaluation.cross_validation.split_k_fold": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 9}, "debeir.evaluation.cross_validation.CrossValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 152, "bases": 0, "doc": 3}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 20}, "debeir.evaluation.evaluator": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.evaluation.evaluator.Evaluator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "debeir.evaluation.evaluator.Evaluator.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 3}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 54}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 42}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 35}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 3}, "debeir.evaluation.residual_scoring": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 54}, "debeir.interfaces": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "debeir.interfaces.callbacks": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "debeir.interfaces.callbacks.Callback": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.Callback.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.Callback.before": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.Callback.after": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.SerializationCallback": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.SerializationCallback.before": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 22}, "debeir.interfaces.callbacks.SerializationCallback.after": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 56}, "debeir.interfaces.callbacks.EvaluationCallback": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "debeir.interfaces.config": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.config.Config": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "debeir.interfaces.config.Config.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.interfaces.config.Config.from_toml": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 82}, "debeir.interfaces.config.Config.from_args": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 44}, "debeir.interfaces.config.Config.from_dict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 32}, "debeir.interfaces.config.Config.validate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "debeir.interfaces.config.GenericConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 12}, "debeir.interfaces.config.GenericConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 424, "bases": 0, "doc": 3}, "debeir.interfaces.config.GenericConfig.from_toml": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 82}, "debeir.interfaces.config.ElasticsearchConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 8}, "debeir.interfaces.config.SolrConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "debeir.interfaces.config.SolrConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "debeir.interfaces.config.MetricsConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "debeir.interfaces.config.MetricsConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "debeir.interfaces.config.MetricsConfig.validate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "debeir.interfaces.config.NIRConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 13}, "debeir.interfaces.config.NIRConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "debeir.interfaces.config.NIRConfig.validate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "debeir.interfaces.config.apply_config": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 22}, "debeir.interfaces.config.override_with_toml_config": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 38}, "debeir.interfaces.config.save_kwargs_to_file": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.interfaces.converters": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 65}, "debeir.interfaces.document": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.document.Document": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "debeir.interfaces.document.Document.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 3}, "debeir.interfaces.document.Document.from_results": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 15}, "debeir.interfaces.document.Document.get_document_id": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "debeir.interfaces.document.Document.flatten_facets": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 43}, "debeir.interfaces.document.Document.get_document_facet": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 57}, "debeir.interfaces.document.Document.set": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 86}, "debeir.interfaces.document.Document.get_trec_format": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 54}, "debeir.interfaces.executor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 7}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 181, "bases": 0, "doc": 3}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 52}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 62}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 26}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 24}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 109, "bases": 0, "doc": 12}, "debeir.interfaces.indexer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.Indexer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.Indexer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.Indexer.get_field": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 24}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 148}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 53}, "debeir.interfaces.parser": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.parser.Parser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 4}, "debeir.interfaces.parser.Parser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.interfaces.parser.Parser.normalize": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 32}, "debeir.interfaces.parser.Parser.get_topics": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 18}, "debeir.interfaces.parser.PickleParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "debeir.interfaces.parser.PickleParser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.parser.XMLParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "debeir.interfaces.parser.XMLParser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 3}, "debeir.interfaces.parser.XMLParser.unwrap": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 35}, "debeir.interfaces.parser.CSVParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 8}, "debeir.interfaces.parser.CSVParser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "debeir.interfaces.parser.TSVParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.interfaces.parser.TSVParser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.parser.JsonLinesParser": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 46}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.Pipeline": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.Pipeline.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.Pipeline.disable": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.interfaces.query": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.interfaces.query.Query": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "debeir.interfaces.query.Query.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "debeir.interfaces.query.GenericElasticsearchQuery": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 23}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 3}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 48}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 58}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 12}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 138}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 38}, "debeir.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.models.colbert": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.models.colbert.CoLBERTConfig": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.models.colbert.CoLBERTConfig.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.models.colbert.CoLBERTConfig.save": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 22}, "debeir.models.colbert.CoLBERTConfig.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 20}, "debeir.models.colbert.ConvolutionalBlock": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 176}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 14}, "debeir.models.colbert.ConvolutionalBlock.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "debeir.models.colbert.KMaxPool": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 176}, "debeir.models.colbert.KMaxPool.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 14}, "debeir.models.colbert.KMaxPool.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "debeir.models.colbert.visualisation_dump": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "debeir.models.colbert.ResidualBlock": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 176}, "debeir.models.colbert.ResidualBlock.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 14}, "debeir.models.colbert.ResidualBlock.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 67}, "debeir.models.colbert.ColBERT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 176}, "debeir.models.colbert.ColBERT.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 261, "bases": 0, "doc": 14}, "debeir.models.colbert.ColBERT.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 67}, "debeir.models.colbert.ColBERT.from_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "debeir.models.colbert.ColBERT.from_pretrained": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "debeir.models.colbert.ColBERT.save_pretrained": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "debeir.models.colbert.ComBERT": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 176}, "debeir.models.colbert.ComBERT.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 273, "bases": 0, "doc": 14}, "debeir.models.colbert.ComBERT.forward": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 67}, "debeir.models.colbert.ComBERT.from_config": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "debeir.models.colbert.ComBERT.from_pretrained": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 3}, "debeir.models.colbert.ComBERT.save_pretrained": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 3}, "debeir.rankers": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "debeir.rankers.reranking": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.rankers.reranking.nir": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "debeir.rankers.reranking.nir.NIReRanker": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 18}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 3}, "debeir.rankers.reranking.reranker": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "debeir.rankers.reranking.reranker.ReRanker": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 3}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 10}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 61}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 3}, "debeir.rankers.reranking.use": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.rankers.reranking.use.USEReRanker": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 14}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "debeir.rankers.transformer_sent_encoder": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.rankers.transformer_sent_encoder.Encoder": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 96}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 3}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 96}, "debeir.training": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "debeir.training.evaluate_reranker": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 176, "bases": 0, "doc": 3}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.config": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.config.HparamConfig": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 47}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 15}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 9}, "debeir.training.hparm_tuning.optuna_rank": {"qualname": 0, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.optuna_rank.objective": {"qualname": 1, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"qualname": 4, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 60}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"qualname": 3, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.Trainer": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"qualname": 4, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 84, "bases": 0, "doc": 40}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"qualname": 5, "fullname": 10, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.trial_callback": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 7}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 127, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.Hparam": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamFloat": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamInt": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamCategorical": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamUniform": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 3}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.training.losses": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.losses.contrastive": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "debeir.training.losses.contrastive.SupConLoss": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 20}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 14}, "debeir.training.losses.contrastive.SupConLoss.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 74}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 8}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 213}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 14}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 67}, "debeir.training.losses.ranking": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "debeir.training.train_reranker": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"qualname": 4, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 244, "bases": 0, "doc": 155}, "debeir.training.train_sentence_encoder": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.train_sentence_encoder.train_biencoder": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 244, "bases": 0, "doc": 146}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 585, "bases": 0, "doc": 292}, "debeir.training.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingScheduler": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingScheduler.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingScheduler.step": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 3}, "debeir.training.utils.get_scheduler_with_wandb": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 15}, "debeir.training.utils.LoggingLoss": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingLoss.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "debeir.training.utils.TokenizerOverload": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.TokenizerOverload.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingEvaluator": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.LoggingEvaluator.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "debeir.training.utils.DatasetToSentTrans": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.training.utils.DatasetToSentTrans.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 63, "bases": 0, "doc": 3}, "debeir.training.utils.tokenize_function": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 59}, "debeir.training.utils.get_max_seq_length": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 3}, "debeir.utils": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "debeir.utils.scaler": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 63}, "debeir.utils.scaler.get_z_value": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 72}, "debeir.utils.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "debeir.utils.utils.create_output_file": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 102}, "debeir.utils.utils.unpack_coroutine": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 48}, "debeir.utils.utils.flatten": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 87}, "debeir.utils.utils.remove_excess_whitespace": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 3}}, "length": 374, "save": true}, "index": {"qualname": {"root": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 74, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 5}}}}, "m": {"2": {"5": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 26}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 12}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 7}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 5}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.utils.TokenizerOverload": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.TSVParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 74}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer.Indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}}, "df": 5}}}}}}}}}}}, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 3}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.engines.dummyindex.index.es_isup": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 7}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}}, "df": 19}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}, "t": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.utils.DatasetToSentTrans": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir.engines.dummyindex.index.DummyIndex": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}}, "df": 5}}}}}}}, "p": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}}, "df": 9, "s": {"docs": {"debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 17}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 3}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.config.Config.from_args": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"debeir.engines.dummyindex.index.es_isup": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}}, "df": 6}}, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.client.Client": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.close": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}}, "df": 19}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.models.colbert.CoLBERTConfig": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 4}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.Callback": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}}, "df": 6}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 7}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.LoggingScheduler": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.utils.LoggingLoss": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.LoggingEvaluator": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.interfaces.parser.Parser": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}}, "df": 5}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.Pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.document.Document.from_results": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 5}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}}, "df": 1}, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 6}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "t": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 7}}}}}, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 3}}}}}}}}}}, "k": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}}, "df": 3}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 3}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}}, "z": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}, "fullname": {"root": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 74, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets": {"tf": 1}, "debeir.data_sets.bioreddit": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines": {"tf": 1}, "debeir.engines.client": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.engines.client.Client.close": {"tf": 1}, "debeir.engines.dummyindex": {"tf": 1}, "debeir.engines.dummyindex.index": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.engines.elasticsearch": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.engines.solr": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.evaluation.cross_validation": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.evaluation.residual_scoring": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1}, "debeir.interfaces.callbacks.Callback": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.config": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.interfaces.converters": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser": {"tf": 1}, "debeir.interfaces.parser.Parser": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}, "debeir.interfaces.query": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.models": {"tf": 1}, "debeir.models.colbert": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.visualisation_dump": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.rankers.reranking": {"tf": 1}, "debeir.rankers.reranking.nir": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training": {"tf": 1}, "debeir.training.evaluate_reranker": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}, "debeir.training.hparm_tuning": {"tf": 1}, "debeir.training.hparm_tuning.config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}, "debeir.training.losses": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.losses.ranking": {"tf": 1}, "debeir.training.train_reranker": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils": {"tf": 1}, "debeir.training.utils.LoggingScheduler": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}, "debeir.utils": {"tf": 1}, "debeir.utils.scaler": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}, "debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 374}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.bioreddit": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}}, "df": 69, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.utils.DatasetToSentTrans": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir.engines.dummyindex": {"tf": 1}, "debeir.engines.dummyindex.index": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}}, "df": 8}}}}}}}, "p": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.from_results": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}}, "df": 10, "s": {"docs": {"debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.bioreddit": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}}, "df": 69}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.transformer_sent_encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 10, "r": {"docs": {"debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}}, "df": 1}, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.evaluation.residual_scoring": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}}, "df": 10}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.utils.scaler": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 6}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.solr": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 7}}}}}, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 3}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 5}}}}, "m": {"2": {"5": {"docs": {"debeir.engines.elasticsearch.change_bm25": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}}, "df": 3}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 26}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 20}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 7}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 5}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.utils.TokenizerOverload": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.data_sets.clinical_trials": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}}, "df": 23, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}}, "df": 5}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}}, "df": 2}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.transformer_sent_encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.train_reranker": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training": {"tf": 1}, "debeir.training.evaluate_reranker": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}, "debeir.training.hparm_tuning": {"tf": 1}, "debeir.training.hparm_tuning.config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}, "debeir.training.losses": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.losses.ranking": {"tf": 1}, "debeir.training.train_reranker": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils": {"tf": 1}, "debeir.training.utils.LoggingScheduler": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 87}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 15}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.data_sets.types": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.training.hparm_tuning.types": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 33}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.TSVParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning": {"tf": 1}, "debeir.training.hparm_tuning.config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 48}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 74}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.engines.dummyindex.index": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 10}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}}, "df": 5}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1}, "debeir.interfaces.callbacks.Callback": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.config": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.Config.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.interfaces.converters": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser": {"tf": 1}, "debeir.interfaces.parser.Parser": {"tf": 1}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}, "debeir.interfaces.query": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 108}}}}}}}}}, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 3}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.engines.dummyindex.index.es_isup": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_clinical_trials": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}}, "df": 23, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.client": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.__init__": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.build_from_config": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.get_client": {"tf": 1.7320508075688772}, "debeir.engines.client.Client.close": {"tf": 1.4142135623730951}}, "df": 6}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.config": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_args": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_dict": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.validate": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1.4142135623730951}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1.4142135623730951}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.training.hparm_tuning.config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}}, "df": 40}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.converters": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 12, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.trec_covid": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.visualisation_dump": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 27, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.models.colbert.CoLBERTConfig": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 4}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 8, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.Callback": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}, "debeir.interfaces.callbacks.Callback": {"tf": 1}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}}, "df": 13}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 7}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.evaluation.cross_validation": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}}, "df": 19}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.factory": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.config_factory": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}, "t": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.query": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.Query.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 23}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 3}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.config.Config.from_args": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 4}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.executor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 14}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.engines": {"tf": 1}, "debeir.engines.client": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.engines.client.Client.close": {"tf": 1}, "debeir.engines.dummyindex": {"tf": 1}, "debeir.engines.dummyindex.index": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.engines.elasticsearch": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.engines.solr": {"tf": 1}}, "df": 35}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.rankers.transformer_sent_encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8}}}}}}, "s": {"docs": {"debeir.engines.dummyindex.index.es_isup": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.engines.elasticsearch": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 20, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 5}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.evaluation": {"tf": 1}, "debeir.evaluation.cross_validation": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.evaluation.residual_scoring": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 18, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}}, "df": 4}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1.4142135623730951}}, "df": 7}}, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.training.evaluate_reranker": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"debeir.data_sets.marco": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.models": {"tf": 1}, "debeir.models.colbert": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.visualisation_dump": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 28}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.rankers.reranking.nir": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 7}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.LoggingScheduler": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 3}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.utils.LoggingLoss": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.LoggingEvaluator": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.losses.ranking": {"tf": 1}}, "df": 14}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.interfaces.parser": {"tf": 1}, "debeir.interfaces.parser.Parser": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 17}, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}}, "df": 4}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 13}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.evaluation.residual_scoring": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}}, "df": 3}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.document.Document.from_results": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.rankers.reranking": {"tf": 1}, "debeir.rankers.reranking.nir": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}}, "df": 14}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}, "debeir.training.train_reranker": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}}, "df": 13}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers": {"tf": 1}, "debeir.rankers.reranking": {"tf": 1}, "debeir.rankers.reranking.nir": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 19}}, "d": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.losses.ranking": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.training.utils": {"tf": 1}, "debeir.training.utils.LoggingScheduler": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}, "debeir.utils": {"tf": 1}, "debeir.utils.scaler": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}, "debeir.utils.utils.unpack_coroutine": {"tf": 1.4142135623730951}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}, "debeir.utils.utils.remove_excess_whitespace": {"tf": 1.4142135623730951}}, "df": 29}}}}, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.reranking.use": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}, "k": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}}, "df": 3}}}}}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1}}}}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 3}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning": {"tf": 1}, "debeir.training.hparm_tuning.config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 48}, "a": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.Hparam": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}}, "s": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}}, "z": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}, "signature": {"root": {"0": {"5": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}, "docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8, "x": {"7": {"docs": {}, "df": 0, "f": {"9": {"6": {"6": {"docs": {}, "df": 0, "d": {"8": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"0": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "docs": {}, "df": 0}}, "1": {"0": {"0": {"0": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 4}, "docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}, "docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}}}}}}, "2": {"8": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "5": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 2}, "docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 9}, "2": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"8": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 4}, "3": {"2": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}, "9": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 2}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1.4142135623730951}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.__init__": {"tf": 2}, "debeir.models.colbert.ComBERT.__init__": {"tf": 2}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.449489742783178}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 2}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 2}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 2}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 2}, "debeir.training.utils.get_max_seq_length": {"tf": 1.4142135623730951}, "debeir.utils.utils.flatten": {"tf": 2}}, "df": 25}, "docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}, "4": {"2": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "5": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 4, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}, "8": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}, "docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 5.830951894845301}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 5.830951894845301}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 4.898979485566356}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 19.697715603592208}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 3.1622776601683795}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 6.6332495807108}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 5.477225575051661}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 5.656854249492381}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 4.69041575982343}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 4.47213595499958}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 4.69041575982343}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 4.69041575982343}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 3.7416573867739413}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 12.083045973594572}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 2}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 5.830951894845301}, "debeir.data_sets.factory.get_index_name": {"tf": 3.1622776601683795}, "debeir.data_sets.factory.factory_fn": {"tf": 4.58257569495584}, "debeir.data_sets.factory.config_factory": {"tf": 9.055385138137417}, "debeir.data_sets.factory.get_nir_config": {"tf": 5.477225575051661}, "debeir.data_sets.factory.apply_nir_config": {"tf": 3.1622776601683795}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 12.083045973594572}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 5.291502622129181}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 7.681145747868608}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 7.483314773547883}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 18.384776310850235}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 3.1622776601683795}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 6.6332495807108}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 5.477225575051661}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 4}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 4.898979485566356}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 5.830951894845301}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 4.898979485566356}, "debeir.data_sets.types.InputExample.__init__": {"tf": 8.12403840463596}, "debeir.data_sets.types.InputExample.get_label": {"tf": 3.1622776601683795}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 5.916079783099616}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 3.7416573867739413}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 4.898979485566356}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 3.1622776601683795}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 3.1622776601683795}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 6}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 8.888194417315589}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 4.898979485566356}, "debeir.engines.client.Client.__init__": {"tf": 7.280109889280518}, "debeir.engines.client.Client.build_from_config": {"tf": 5.656854249492381}, "debeir.engines.client.Client.get_client": {"tf": 3.7416573867739413}, "debeir.engines.client.Client.close": {"tf": 3.1622776601683795}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 2}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 3.1622776601683795}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 3.1622776601683795}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 3.1622776601683795}, "debeir.engines.dummyindex.index.es_isup": {"tf": 4.242640687119285}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 6.48074069840786}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 12.609520212918492}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 3.7416573867739413}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 4.69041575982343}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 8.246211251235321}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 2}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 3.1622776601683795}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 6.164414002968976}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 6.244997998398398}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 3.1622776601683795}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 5.477225575051661}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 3.7416573867739413}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 6.557438524302}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 3.7416573867739413}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 10}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 4.242640687119285}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 5}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 6.082762530298219}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 9.327379053088816}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 4.242640687119285}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 7.280109889280518}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 6.782329983125268}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 6.708203932499369}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 2}, "debeir.interfaces.callbacks.Callback.before": {"tf": 5.477225575051661}, "debeir.interfaces.callbacks.Callback.after": {"tf": 4.242640687119285}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 6.782329983125268}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 5.477225575051661}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 4.242640687119285}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 5.291502622129181}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 5.477225575051661}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 5.291502622129181}, "debeir.interfaces.config.Config.__init__": {"tf": 2}, "debeir.interfaces.config.Config.from_toml": {"tf": 8.18535277187245}, "debeir.interfaces.config.Config.from_args": {"tf": 5.830951894845301}, "debeir.interfaces.config.Config.from_dict": {"tf": 4.47213595499958}, "debeir.interfaces.config.Config.validate": {"tf": 3.1622776601683795}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 18.384776310850235}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 7.874007874011811}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 6}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 3.1622776601683795}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 6}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 4.123105625617661}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 3.1622776601683795}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 6.324555320336759}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 3.1622776601683795}, "debeir.interfaces.config.apply_config": {"tf": 3.1622776601683795}, "debeir.interfaces.config.override_with_toml_config": {"tf": 3.1622776601683795}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 3.1622776601683795}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 2}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 7.681145747868608}, "debeir.interfaces.document.Document.__init__": {"tf": 7.874007874011811}, "debeir.interfaces.document.Document.from_results": {"tf": 5.385164807134504}, "debeir.interfaces.document.Document.get_document_id": {"tf": 3.1622776601683795}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 4.69041575982343}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 4.898979485566356}, "debeir.interfaces.document.Document.set": {"tf": 8.366600265340756}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 6.782329983125268}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 12.083045973594572}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 5.291502622129181}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 7.681145747868608}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 9.16515138991168}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 3.1622776601683795}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 9.38083151964686}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 2.8284271247461903}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 4.242640687119285}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 8.602325267042627}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 5.477225575051661}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 4.242640687119285}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 3.7416573867739413}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 3.1622776601683795}, "debeir.interfaces.parser.Parser.__init__": {"tf": 2}, "debeir.interfaces.parser.Parser.normalize": {"tf": 4}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 5.0990195135927845}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 4.123105625617661}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 5.744562646538029}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 4.242640687119285}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 3.4641016151377544}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 4.123105625617661}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 7.54983443527075}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 8.366600265340756}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 4.242640687119285}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 6.324555320336759}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 4.69041575982343}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 4}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 3.1622776601683795}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 4.69041575982343}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 4.69041575982343}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 5.477225575051661}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 3.7416573867739413}, "debeir.interfaces.query.Query.__init__": {"tf": 7.211102550927978}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 7.416198487095663}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 5.0990195135927845}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 6.6332495807108}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 3.1622776601683795}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 4.69041575982343}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 3.7416573867739413}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 3.1622776601683795}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 4.898979485566356}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 4.898979485566356}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 6}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 3.7416573867739413}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 3.4641016151377544}, "debeir.models.colbert.KMaxPool.forward": {"tf": 3.7416573867739413}, "debeir.models.colbert.visualisation_dump": {"tf": 3.7416573867739413}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 6}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 3.7416573867739413}, "debeir.models.colbert.ColBERT.__init__": {"tf": 14.035668847618199}, "debeir.models.colbert.ColBERT.forward": {"tf": 4.69041575982343}, "debeir.models.colbert.ColBERT.from_config": {"tf": 4.47213595499958}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 4.47213595499958}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 3.7416573867739413}, "debeir.models.colbert.ComBERT.__init__": {"tf": 14.352700094407323}, "debeir.models.colbert.ComBERT.forward": {"tf": 4.69041575982343}, "debeir.models.colbert.ComBERT.from_config": {"tf": 4.47213595499958}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 4.47213595499958}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 3.7416573867739413}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 9.9498743710662}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 5.291502622129181}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 3.4641016151377544}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 4.47213595499958}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 7}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 4}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 6.164414002968976}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 11.74734012447073}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 3.1622776601683795}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 4.69041575982343}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 5.656854249492381}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 3.1622776601683795}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 3.1622776601683795}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 7.280109889280518}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 7.615773105863909}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 5.0990195135927845}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 2}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 4}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 6.557438524302}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 6.244997998398398}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 8.306623862918075}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 4.242640687119285}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 6.557438524302}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 5.477225575051661}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 9.9498743710662}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 4}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 2}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 4.69041575982343}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 7.810249675906654}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 5.5677643628300215}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 7.483314773547883}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 5.5677643628300215}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 6}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 5.5677643628300215}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 6.6332495807108}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 5.5677643628300215}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 6.6332495807108}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 5.5677643628300215}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 7.54983443527075}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 5.5677643628300215}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 5.477225575051661}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 5.477225575051661}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 3.7416573867739413}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 3.7416573867739413}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 3.7416573867739413}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 7.54983443527075}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 3.1622776601683795}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 7.0710678118654755}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 13.638181696985855}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 13.638181696985855}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 20.952326839756964}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 7.0710678118654755}, "debeir.training.utils.LoggingScheduler.step": {"tf": 4.242640687119285}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 7.937253933193772}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 5.830951894845301}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 4.47213595499958}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 5.830951894845301}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 7.0710678118654755}, "debeir.training.utils.tokenize_function": {"tf": 4.69041575982343}, "debeir.training.utils.get_max_seq_length": {"tf": 5.291502622129181}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 3.4641016151377544}, "debeir.utils.scaler.get_z_value": {"tf": 4}, "debeir.utils.utils.create_output_file": {"tf": 5.656854249492381}, "debeir.utils.utils.unpack_coroutine": {"tf": 3.1622776601683795}, "debeir.utils.utils.flatten": {"tf": 5.477225575051661}, "debeir.utils.utils.remove_excess_whitespace": {"tf": 3.1622776601683795}}, "df": 235, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 35}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1.7320508075688772}, "debeir.engines.client.Client.build_from_config": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 11}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 2.23606797749979}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.config_factory": {"tf": 1.7320508075688772}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 2}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 2}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 2}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 2.449489742783178}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1.4142135623730951}, "debeir.interfaces.query.Query.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 38, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 7}}}}, "l": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 4, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {"debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.config_factory": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 31}}, "r": {"docs": {"debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 2.23606797749979}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 43}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}}, "df": 1}}}, "v": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 11, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 2}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.8284271247461903}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.get_max_seq_length": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 6}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.from_results": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}}, "df": 4, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.__init__": {"tf": 2}, "debeir.models.colbert.ComBERT.__init__": {"tf": 2}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1.4142135623730951}}, "df": 28, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 2}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}}, "df": 24}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}}, "df": 11}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}}}, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 14, "x": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}}, "df": 1}}, "f": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}, "p": {"docs": {"debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"debeir.utils.utils.remove_excess_whitespace": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 3.7416573867739413}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 2.23606797749979}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 2.23606797749979}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 3.3166247903554}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 2.23606797749979}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 2}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 3.3166247903554}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 2.23606797749979}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.query.Query.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 2.6457513110645907}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1.4142135623730951}}, "df": 54, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 2}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 5, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.engines.client.Client.close": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 94}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 8}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}, "p": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.client.Client.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 2}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 12}}, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1, "o": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1, "p": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}}, "df": 10, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 15}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}}, "df": 4}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 11, "s": {"docs": {"debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 14}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 2}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 2}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 2}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 2}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 2}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 2}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 2}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 2}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 2}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 2}}, "df": 11, "s": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 5}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 44}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"debeir.models.colbert.visualisation_dump": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 5}}}}}}}}, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}}}, "t": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}, "k": {"1": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}, "docs": {"debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 61}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 4}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 4}}}}}}, "q": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 2}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 19}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 4.358898943540674}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 4}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 4}, "debeir.interfaces.document.Document.set": {"tf": 2.23606797749979}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 2.23606797749979}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 2.23606797749979}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 2.23606797749979}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.8284271247461903}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 33}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 17}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}}, "df": 5, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1.7320508075688772}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.get_client": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 9}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.factory.get_nir_config": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"debeir.engines.client.Client.__init__": {"tf": 1}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 3}, "b": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}}}, "b": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 2.449489742783178}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 2.449489742783178}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 2.449489742783178}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 2}, "debeir.models.colbert.ComBERT.__init__": {"tf": 2}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 1}}}}}, "m": {"2": {"5": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "f": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 2}, "debeir.data_sets.factory.get_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 2}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 2}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1}}, "df": 18}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.interfaces.document.Document.__init__": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 2}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 2}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 2}, "debeir.interfaces.document.Document.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 15}}}}, "p": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 15}, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 2}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 2}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 2}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}}, "df": 10, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 8, "s": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 9, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 12}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.evaluation.cross_validation.split_k_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}}, "df": 6}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1.4142135623730951}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.client.Client.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}}, "df": 6}}, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 17}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 7}}}}, "m": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1}}, "df": 11}}}}}, "r": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 4}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1.4142135623730951}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 34}}}, "t": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 2.23606797749979}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 13}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.4142135623730951}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.PickleParser.__init__": {"tf": 1}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 4, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.7320508075688772}}, "df": 5}, "d": {"docs": {"debeir.interfaces.parser.CSVParser.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 14, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.callbacks.Callback.before": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.7320508075688772}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}}, "df": 8}}}}, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 7}}, "d": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.4142135623730951}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 18}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.engines.client.Client.__init__": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query.__init__": {"tf": 1}}, "df": 8}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 3}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 2.23606797749979}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 13}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 2}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, ":": {"9": {"2": {"0": {"0": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 5}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1}}, "df": 5}}}}, "f": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"3": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "x": {"2": {"7": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 3.1622776601683795}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 2.449489742783178}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "docs": {}, "df": 0}, "docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}, "debeir.training.utils.get_max_seq_length": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}}, "df": 2, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2}}, "df": 2, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.Config.from_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.LoggingScheduler.__init__": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 4, "l": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1.4142135623730951}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 9, "s": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}}, "df": 2}}}, "d": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1}}, "df": 6}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 19}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 14}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 9}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.pipeline.NIRPipeline": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.interfaces.parser.TSVParser": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.interfaces.callbacks.SerializationCallback": {"tf": 1}, "debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 5}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1.4142135623730951}}, "df": 3}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1.4142135623730951}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.SolrConfig": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}}, "df": 2}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.config.GenericConfig": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 7}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 7}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1}}, "df": 6}}}}}}}}, "doc": {"root": {"0": {"5": {"7": {"0": {"9": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "6": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}, "7": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}, "docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 2.449489742783178}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8}, "1": {"1": {"3": {"6": {"2": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"3": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 2.449489742783178}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 18, "s": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}, "2": {"0": {"2": {"0": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}}, "df": 5}, "docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}, "3": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}, "4": {"2": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 6, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}, "7": {"5": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"debeir": {"tf": 3}, "debeir.data_sets": {"tf": 4.242640687119285}, "debeir.data_sets.bioreddit": {"tf": 1.7320508075688772}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.7320508075688772}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.7320508075688772}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 5.916079783099616}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 4.47213595499958}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 5.656854249492381}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 4.47213595499958}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 7.937253933193772}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_query_type": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 4.795831523312719}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.7320508075688772}, "debeir.data_sets.factory": {"tf": 1.7320508075688772}, "debeir.data_sets.factory.get_index_name": {"tf": 3.872983346207417}, "debeir.data_sets.factory.factory_fn": {"tf": 5.196152422706632}, "debeir.data_sets.factory.config_factory": {"tf": 5.5677643628300215}, "debeir.data_sets.factory.get_nir_config": {"tf": 1.7320508075688772}, "debeir.data_sets.factory.apply_nir_config": {"tf": 3.872983346207417}, "debeir.data_sets.marco": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 4.795831523312719}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 6.4031242374328485}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 4.242640687119285}, "debeir.data_sets.marco.MarcoQueryConfig": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 5.916079783099616}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 4.47213595499958}, "debeir.data_sets.trec_clinical_trials": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser.extract": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_covid": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types": {"tf": 1.7320508075688772}, "debeir.data_sets.types.InputExample": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample.__init__": {"tf": 2}, "debeir.data_sets.types.InputExample.get_label": {"tf": 1.7320508075688772}, "debeir.data_sets.types.InputExample.to_dict": {"tf": 1.7320508075688772}, "debeir.data_sets.types.InputExample.from_parser_output": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample": {"tf": 1.4142135623730951}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 2}, "debeir.data_sets.types.RelevanceExample.get_label": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 3.3166247903554}, "debeir.data_sets.types.DatasetTypes": {"tf": 1.7320508075688772}, "debeir.data_sets.utils": {"tf": 1.7320508075688772}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 6}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 4}, "debeir.engines": {"tf": 1.7320508075688772}, "debeir.engines.client": {"tf": 1.7320508075688772}, "debeir.engines.client.Client": {"tf": 1.4142135623730951}, "debeir.engines.client.Client.__init__": {"tf": 1.7320508075688772}, "debeir.engines.client.Client.build_from_config": {"tf": 4.47213595499958}, "debeir.engines.client.Client.get_client": {"tf": 1.7320508075688772}, "debeir.engines.client.Client.close": {"tf": 1.4142135623730951}, "debeir.engines.dummyindex": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.DummyIndex": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.DummyIndex.__init__": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.DummyIndex.get_documents": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.DummyIndex.query": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.DummyIndex.scorer": {"tf": 1.7320508075688772}, "debeir.engines.dummyindex.index.es_isup": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.change_bm25": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 5.477225575051661}, "debeir.engines.elasticsearch.executor": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 2.23606797749979}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 3.605551275463989}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 4.242640687119285}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 6.708203932499369}, "debeir.engines.elasticsearch.generate_script_score": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 2}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.__init__": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 4.898979485566356}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 4.358898943540674}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 3.605551275463989}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 4.358898943540674}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 4.358898943540674}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 5.196152422706632}, "debeir.engines.solr": {"tf": 1.7320508075688772}, "debeir.evaluation": {"tf": 2.449489742783178}, "debeir.evaluation.cross_validation": {"tf": 1.7320508075688772}, "debeir.evaluation.cross_validation.split_k_fold": {"tf": 1.7320508075688772}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 3.3166247903554}, "debeir.evaluation.cross_validation.CrossValidator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 3.4641016151377544}, "debeir.evaluation.evaluator": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 4.242640687119285}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 4.123105625617661}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 4.47213595499958}, "debeir.evaluation.evaluator.Evaluator.build_from_config": {"tf": 1.7320508075688772}, "debeir.evaluation.residual_scoring": {"tf": 1.7320508075688772}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.__init__": {"tf": 1.7320508075688772}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 4.242640687119285}, "debeir.interfaces": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.Callback": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.Callback.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.Callback.before": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.Callback.after": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 3.605551275463989}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 4.58257569495584}, "debeir.interfaces.callbacks.EvaluationCallback": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.EvaluationCallback.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.EvaluationCallback.before": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.EvaluationCallback.after": {"tf": 1.7320508075688772}, "debeir.interfaces.config": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config.from_toml": {"tf": 5.916079783099616}, "debeir.interfaces.config.Config.from_args": {"tf": 5.477225575051661}, "debeir.interfaces.config.Config.from_dict": {"tf": 4.47213595499958}, "debeir.interfaces.config.Config.validate": {"tf": 1.7320508075688772}, "debeir.interfaces.config.GenericConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 5.916079783099616}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.ElasticsearchConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1.4142135623730951}, "debeir.interfaces.config.SolrConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.SolrConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.MetricsConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.MetricsConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1.4142135623730951}, "debeir.interfaces.config.NIRConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.NIRConfig.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1.7320508075688772}, "debeir.interfaces.config.apply_config": {"tf": 3.872983346207417}, "debeir.interfaces.config.override_with_toml_config": {"tf": 3.7416573867739413}, "debeir.interfaces.config.save_kwargs_to_file": {"tf": 1.7320508075688772}, "debeir.interfaces.converters": {"tf": 1.7320508075688772}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1.7320508075688772}, "debeir.interfaces.converters.ParsedTopicsToDataset.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 5.477225575051661}, "debeir.interfaces.document": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.from_results": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_document_id": {"tf": 3.3166247903554}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 4.69041575982343}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 5.196152422706632}, "debeir.interfaces.document.Document.set": {"tf": 6.928203230275509}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 4.242640687119285}, "debeir.interfaces.executor": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 4.795831523312719}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 6.4031242374328485}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 4.242640687119285}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.Indexer": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.Indexer.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.Indexer.get_field": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 5.5677643628300215}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.update_mappings": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.get_field": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.index_document": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 2.449489742783178}, "debeir.interfaces.parser": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.Parser": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.Parser.normalize": {"tf": 4}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.PickleParser": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.PickleParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.XMLParser": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.XMLParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 4.242640687119285}, "debeir.interfaces.parser.CSVParser": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.CSVParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.TSVParser": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.TSVParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 2.23606797749979}, "debeir.interfaces.parser.JsonLinesParser.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.disable": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.build_from_config": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.Pipeline.run_pipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.prehook": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.run_engine": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.posthook": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.run_pipeline": {"tf": 1.7320508075688772}, "debeir.interfaces.pipeline.NIRPipeline.register_callback": {"tf": 1.7320508075688772}, "debeir.interfaces.query": {"tf": 1.7320508075688772}, "debeir.interfaces.query.Query": {"tf": 4}, "debeir.interfaces.query.Query.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 5.0990195135927845}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 4}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 2}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 7.0710678118654755}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 4.795831523312719}, "debeir.models": {"tf": 1.7320508075688772}, "debeir.models.colbert": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 3.7416573867739413}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 2.23606797749979}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 5.830951894845301}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 3.872983346207417}, "debeir.models.colbert.KMaxPool": {"tf": 5.830951894845301}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool.forward": {"tf": 3.872983346207417}, "debeir.models.colbert.visualisation_dump": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 5.830951894845301}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 3.872983346207417}, "debeir.models.colbert.ColBERT": {"tf": 5.830951894845301}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT.forward": {"tf": 3.872983346207417}, "debeir.models.colbert.ColBERT.from_config": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT.from_pretrained": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT.save_pretrained": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 5.830951894845301}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.forward": {"tf": 3.872983346207417}, "debeir.models.colbert.ComBERT.from_config": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.from_pretrained": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.save_pretrained": {"tf": 1.7320508075688772}, "debeir.rankers": {"tf": 3.1622776601683795}, "debeir.rankers.reranking": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.nir": {"tf": 2}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.nir.NIReRanker.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 2.449489742783178}, "debeir.rankers.reranking.reranker.ReRanker.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 2}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 5}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.DocumentReRanker.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.use": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.use.USEReRanker.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 5.385164807134504}, "debeir.rankers.transformer_sent_encoder.Encoder.__init__": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 5.477225575051661}, "debeir.training": {"tf": 1.7320508075688772}, "debeir.training.evaluate_reranker": {"tf": 1.7320508075688772}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1.4142135623730951}, "debeir.training.evaluate_reranker.SentenceEvaluator.__init__": {"tf": 1.7320508075688772}, "debeir.training.evaluate_reranker.SentenceEvaluator.produce_ranked_lists": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 4}, "debeir.training.hparm_tuning.config.HparamConfig.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig.from_json": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.optuna_rank.objective": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 5.830951894845301}, "debeir.training.hparm_tuning.optuna_rank.print_optuna_stats": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.OptimizersWrapper.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.Trainer.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.Trainer.fit": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 4.242640687119285}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.build_kwargs_and_model": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.fit": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.trial_callback": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer.fit": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.Hparam": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.Hparam.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.Hparam.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamFloat": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamFloat.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamFloat.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamInt": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamInt.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamInt.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamCategorical": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamCategorical.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamCategorical.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamUniform": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamUniform.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamUniform.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamLogUniform": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamLogUniform.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamLogUniform.suggest": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.__init__": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.types.HparamDiscreteUniform.suggest": {"tf": 1.7320508075688772}, "debeir.training.losses": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive": {"tf": 2.449489742783178}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 2}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 3.1622776601683795}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SiameseDistanceMetric.EUCLIDEAN": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.SiameseDistanceMetric.MANHATTAN": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.SiameseDistanceMetric.COSINE_DISTANCE": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 6}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss.get_config_dict": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 3.872983346207417}, "debeir.training.losses.ranking": {"tf": 1.4142135623730951}, "debeir.training.train_reranker": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 7.615773105863909}, "debeir.training.train_sentence_encoder": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 7.54983443527075}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 10.723805294763608}, "debeir.training.utils": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingScheduler": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingScheduler.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingScheduler.step": {"tf": 1.7320508075688772}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.utils.LoggingLoss": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingLoss.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.TokenizerOverload": {"tf": 1.7320508075688772}, "debeir.training.utils.TokenizerOverload.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingEvaluator": {"tf": 1.7320508075688772}, "debeir.training.utils.LoggingEvaluator.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.DatasetToSentTrans": {"tf": 1.7320508075688772}, "debeir.training.utils.DatasetToSentTrans.__init__": {"tf": 1.7320508075688772}, "debeir.training.utils.tokenize_function": {"tf": 5.916079783099616}, "debeir.training.utils.get_max_seq_length": {"tf": 1.7320508075688772}, "debeir.utils": {"tf": 1.4142135623730951}, "debeir.utils.scaler": {"tf": 1.7320508075688772}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 4.898979485566356}, "debeir.utils.scaler.get_z_value": {"tf": 5.385164807134504}, "debeir.utils.utils": {"tf": 1.7320508075688772}, "debeir.utils.utils.create_output_file": {"tf": 6.082762530298219}, "debeir.utils.utils.unpack_coroutine": {"tf": 5}, "debeir.utils.utils.flatten": {"tf": 5.916079783099616}, "debeir.utils.utils.remove_excess_whitespace": {"tf": 1.7320508075688772}}, "df": 374, "t": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 2}, "debeir.data_sets": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 2.6457513110645907}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 2.6457513110645907}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 2}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 3.4641016151377544}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 3.1622776601683795}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.7320508075688772}, "debeir.evaluation": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 3.1622776601683795}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 2.449489742783178}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 2.23606797749979}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 2}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 2.449489742783178}, "debeir.models.colbert.KMaxPool": {"tf": 2}, "debeir.models.colbert.KMaxPool.forward": {"tf": 2.449489742783178}, "debeir.models.colbert.ResidualBlock": {"tf": 2}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 2.449489742783178}, "debeir.models.colbert.ColBERT": {"tf": 2}, "debeir.models.colbert.ColBERT.forward": {"tf": 2.449489742783178}, "debeir.models.colbert.ComBERT": {"tf": 2}, "debeir.models.colbert.ComBERT.forward": {"tf": 2.449489742783178}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 2}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 2.23606797749979}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 3.3166247903554}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 2.449489742783178}, "debeir.training.losses.ranking": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 2}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 2}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.23606797749979}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 2}, "debeir.utils.utils.create_output_file": {"tf": 2.449489742783178}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 105, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets": {"tf": 1}}, "df": 1}}, "m": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 6}}, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.forward": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}}, "df": 18}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 11}, "n": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 2}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2.449489742783178}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}, "debeir.rankers": {"tf": 1}, "debeir.training": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 5, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 3}, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"debeir.evaluation": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}}, "df": 8}, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}, "o": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 2}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 2}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.7320508075688772}, "debeir.engines": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2.8284271247461903}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 2}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 2}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 2.449489742783178}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 2}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 2.449489742783178}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 2.23606797749979}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 3.4641016151377544}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.7320508075688772}}, "df": 70, "p": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.7320508075688772}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.7320508075688772}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.4142135623730951}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 19, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 23}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 10}}, "o": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 6}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.tokenize_function": {"tf": 1.7320508075688772}}, "df": 2}, "d": {"docs": {"debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}}, "df": 4}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 2}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 2}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 2}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.interfaces": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.rankers.reranking.nir": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 28}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {"debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}}, "df": 1, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1, "e": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}}, "df": 2, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.utils": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 2}}, "df": 7}}}}}, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 17, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 12}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 9, "@": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 2.449489742783178}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 2.449489742783178}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 2.449489742783178}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 2.449489742783178}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 2.449489742783178}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 12}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}}, "df": 3, "n": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.interfaces": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 21, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}}, "df": 2}, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.parser.Parser": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.interfaces": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.document.Document": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 11}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}}, "df": 8}, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.reranking.nir": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 4}, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.rankers": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.config.GenericConfig": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}}, "df": 6, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 7}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.engines": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 10}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 17}, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 2.8284271247461903}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 25}, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1.4142135623730951}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1.4142135623730951}}, "df": 10, "x": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}}, "df": 3}, "s": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 2}}, "t": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "m": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.rankers": {"tf": 1.4142135623730951}, "debeir.training": {"tf": 1}}, "df": 2}}, "d": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.rankers": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 2}}}, "w": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 9}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "o": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 10, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.training": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.training": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2.6457513110645907}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1.4142135623730951}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.4142135623730951}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 61}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 4}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 2, "d": {"docs": {"debeir.evaluation": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 7, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2.23606797749979}, "debeir.evaluation": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.4142135623730951}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 11}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 6, "o": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 5, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.config.SolrConfig": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 4, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 2.449489742783178}, "debeir.models.colbert.KMaxPool": {"tf": 2.449489742783178}, "debeir.models.colbert.ResidualBlock": {"tf": 2.449489742783178}, "debeir.models.colbert.ColBERT": {"tf": 2.449489742783178}, "debeir.models.colbert.ComBERT": {"tf": 2.449489742783178}}, "df": 13}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.engines": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}, "debeir.evaluation": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 2}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}, "p": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.7320508075688772}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {"debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.utils": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 2}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.utils": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.4142135623730951}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 18, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 7}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}}, "df": 6, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 7}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1.4142135623730951}}, "df": 4, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}}, "df": 19}}}, "r": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.tokenize_function": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.7320508075688772}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}}, "df": 16}}}, "w": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.7320508075688772}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 6}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.rankers": {"tf": 1}, "debeir.training": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}}, "df": 4}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 2.23606797749979}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 2}, "debeir.data_sets.factory.config_factory": {"tf": 2}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 2.23606797749979}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 2.23606797749979}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 2.23606797749979}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 2.449489742783178}}, "df": 25, "s": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 5}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 9}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": null}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": null}}, "df": 2}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"1": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5}, "2": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.utils": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 3}, "d": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.query.Query": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.reranking.use.USEReRanker": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 2}}}}}, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 10}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 6}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1.4142135623730951}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.utils": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.forward": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}}, "df": 11, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.7320508075688772}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 2}, "debeir.models.colbert.KMaxPool": {"tf": 2}, "debeir.models.colbert.ResidualBlock": {"tf": 2}, "debeir.models.colbert.ColBERT": {"tf": 2}, "debeir.models.colbert.ComBERT": {"tf": 2}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}}, "df": 36, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.client.Client": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.client.Client.close": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.utils": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.config.Config": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}}, "df": 4}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"debeir.interfaces": {"tf": 1}, "debeir.rankers": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"debeir.interfaces.parser.CSVParser": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "l": {"6": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.ranking": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 9}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 2}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rerank": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 2}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1}}, "df": 16, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 3}, "k": {"docs": {"debeir.rankers.reranking.nir": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1.4142135623730951}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 7, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 8, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.training.losses.ranking": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 2}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 2.23606797749979}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2.449489742783178}}, "df": 6, "s": {"docs": {"debeir.data_sets.types.RelevanceExample": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.rankers": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.7320508075688772}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1.4142135623730951}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}}, "df": 4}}}, "k": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 2}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}, "y": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}, "x": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 8, "l": {"docs": {"debeir": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 2.23606797749979}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2.449489742783178}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 2.449489742783178}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 2.449489742783178}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 3.1622776601683795}}, "df": 12, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 19, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 12, "s": {"docs": {"debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.23606797749979}}, "df": 4, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 10}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.document.Document": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "y": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"debeir": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.7320508075688772}}, "df": 7}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 3, "r": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser": {"tf": 1}}, "df": 9}, "d": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 2}, "s": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.7320508075688772}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 80}}}}}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1.4142135623730951}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 15, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 1}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 6}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 1}}, "s": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.reranking.nir": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.interfaces.document.Document.from_results": {"tf": 1}}, "df": 1}}, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1, "d": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.PickleParser": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 7}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 2}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils.utils.flatten": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.parser.Parser.normalize": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.client.Client": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 2}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2.6457513110645907}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"debeir.data_sets": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 2.23606797749979}, "debeir.interfaces": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 8, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.7320508075688772}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 2.6457513110645907}}, "df": 12}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2}}, "df": 1}}}}}}}, "e": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 1, "c": {"docs": {"debeir.interfaces.document.Document.get_document_id": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1.7320508075688772}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}}, "df": 18, "s": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}}, "df": 2}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 1}, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 5, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 2}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}}, "df": 2}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.ranking": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.KMaxPool": {"tf": 1.7320508075688772}, "debeir.models.colbert.ResidualBlock": {"tf": 1.7320508075688772}, "debeir.models.colbert.ColBERT": {"tf": 1.7320508075688772}, "debeir.models.colbert.ComBERT": {"tf": 1.7320508075688772}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 6, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.data_sets": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TREClinicalTrialDocumentParser": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.4142135623730951}, "debeir.evaluation": {"tf": 1.7320508075688772}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1.7320508075688772}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.7320508075688772}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 2}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 2.23606797749979}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.SiameseDistanceMetric": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 78, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 11, "s": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}}, "df": 5}}}}}, "m": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"debeir.data_sets": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.losses.contrastive": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.training.losses.ranking": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 44}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.SolrConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.MetricsConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.NIRConfig": {"tf": 1.4142135623730951}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 2.6457513110645907}}, "df": 26, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 12, "s": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 2}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}, "p": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 10}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 2}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1.7320508075688772}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.config.apply_config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 22, "s": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.rankers": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 3}}, "s": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.CoLBERTConfig.save": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 2.23606797749979}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.PickleParser": {"tf": 1}, "debeir.interfaces.parser.CSVParser": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1.4142135623730951}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 2.449489742783178}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 2.23606797749979}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.unpack_coroutine": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 2}}, "df": 80, "n": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 20, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.utils": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 39}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 19}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.factory.apply_nir_config": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 15}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.ranking": {"tf": 1}}, "df": 5}}, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 6}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 2}, "debeir.models.colbert.KMaxPool": {"tf": 2}, "debeir.models.colbert.ResidualBlock": {"tf": 2}, "debeir.models.colbert.ColBERT": {"tf": 2}, "debeir.models.colbert.ComBERT": {"tf": 2}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}, "debeir.utils": {"tf": 1}}, "df": 17, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 19, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"debeir.training.losses.ranking": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.training.losses.contrastive.SupConLoss": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 1}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}, "d": {"docs": {"debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.callbacks": {"tf": 1.4142135623730951}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.document.Document": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir": {"tf": 1.4142135623730951}, "debeir.evaluation": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.training": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1.4142135623730951}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.utils": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 2.8284271247461903}}, "df": 10}}}}}, "f": {"docs": {"debeir": {"tf": 1}, "debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 2.23606797749979}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.4142135623730951}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 2}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.forward": {"tf": 1.4142135623730951}, "debeir.rankers": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}, "debeir.training": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.training.utils.tokenize_function": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1.7320508075688772}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 47, "f": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 6, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 2}}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"debeir": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.7320508075688772}, "debeir.data_sets.factory.config_factory": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.average_all_metrics": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset.convert": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1.4142135623730951}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 28, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.engines.client.Client.close": {"tf": 1}, "debeir.interfaces.document.Document.from_results": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.rankers.reranking.reranker.DocumentReRanker": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "n": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 13, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}}, "df": 3}}, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 12}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.client.Client": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.config.override_with_toml_config": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 2}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.7320508075688772}, "debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 22, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "/": {"2": {"0": {"0": {"2": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}, "4": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1}}, "s": {"docs": {"debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1.4142135623730951}, "debeir.training.hparm_tuning.trainer.SentenceTransformerTrainer": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}, "debeir.evaluation.evaluator.Evaluator.sigtests": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "x": {"docs": {"debeir": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.rankers": {"tf": 1}, "debeir.training": {"tf": 1}}, "df": 4}, "o": {"docs": {}, "df": 0, "l": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}}, "df": 8}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.interfaces.config.Config.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1.7320508075688772}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.7320508075688772}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT.forward": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT.forward": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 34, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.types.RelevanceExample.relevance": {"tf": 1}, "debeir.engines.client.Client": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.7320508075688772}, "debeir.utils.utils.flatten": {"tf": 1}}, "df": 4}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1.4142135623730951}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.callbacks": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.SolrConfig": {"tf": 1}, "debeir.interfaces.config.MetricsConfig": {"tf": 1}, "debeir.interfaces.config.NIRConfig": {"tf": 1}}, "df": 5}}, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 7, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.rankers.reranking.use.USEReRanker": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 5}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 4}}}, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}, "m": {"2": {"5": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 2}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 2.23606797749979}, "debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 17}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "y": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.models.colbert.ConvolutionalBlock.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.__init__": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.__init__": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.__init__": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.__init__": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 25}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "z": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 2}}, "df": 1}}}, "y": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.7320508075688772}}, "df": 1, "o": {"docs": {}, "df": 0, "u": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}}, "df": 7, "r": {"docs": {"debeir": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 7}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1, "@": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets": {"tf": 1.4142135623730951}, "debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1.7320508075688772}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.factory.factory_fn": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2.8284271247461903}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.finish": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.7320508075688772}}, "df": 29, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.query.Query": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.data_sets": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.engines": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.evaluation": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers": {"tf": 1}}, "df": 14}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_embed_field": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.rankers": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}}, "df": 4, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_source": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 7}, "d": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}}, "df": 2}}}, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.rankers.reranking.reranker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.client.Client.close": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 12, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.bioreddit.BioRedditSubmissionParser.get_topics": {"tf": 1}, "debeir.data_sets.bioreddit.BioRedditCommentParser.get_topics": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialParser.get_topics": {"tf": 1}, "debeir.data_sets.trec_covid.TrecCovidParser.get_topics": {"tf": 1}, "debeir.interfaces.parser.Parser.get_topics": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 16}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.types.InputExample.__init__": {"tf": 1.4142135623730951}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}}, "v": {"2": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.data_sets": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.generate_script_score.check_params_is_valid": {"tf": 1}}, "df": 1, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}}, "df": 4}, "s": {"docs": {"debeir.data_sets.marco.MarcoQueryConfig.validate": {"tf": 1}, "debeir.interfaces.config.Config.validate": {"tf": 1}, "debeir.interfaces.config.NIRConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.validate": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidatorTypes": {"tf": 1}, "debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.callbacks": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.parser.Parser.normalize": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.bioreddit.BioRedditElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.after": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig": {"tf": 1}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 16}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1, "r": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.7320508075688772}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 7}, "d": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.engines.client.Client.build_from_config": {"tf": 1.7320508075688772}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 2, "s": {"docs": {"debeir.engines": {"tf": 1}, "debeir.evaluation": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.validate": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.trec_clinical_trials.TrecClincialElasticsearchQuery": {"tf": 1}, "debeir.data_sets.trec_covid.TrecElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 2}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}}, "df": 5, "s": {"docs": {"debeir.data_sets.clinical_trials.ClinicalTrialsElasticsearchExecutor": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1.4142135623730951}, "debeir.data_sets.marco.MarcoElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.build_from_config": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1.7320508075688772}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1.7320508075688772}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 9, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 2}, "debeir.training.utils.tokenize_function": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}}, "df": 1}}, "s": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.callbacks.SerializationCallback.before": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.factory.factory_fn": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}}, "df": 5}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.evaluation": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.evaluate_reranker.SentenceEvaluator": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 10, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "e": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}, "d": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"debeir.interfaces.callbacks": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 8}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"1": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 1}, "docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}}, "df": 2, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsQueryConfig.from_dict": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_ablation": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_dict": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.Config.from_args": {"tf": 1}, "debeir.interfaces.config.Config.from_dict": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1}, "debeir.interfaces.document.Document.flatten_facets": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.execute_query": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}, "debeir.utils.utils.create_output_file": {"tf": 1}}, "df": 30}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1.7320508075688772}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 3, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"debeir.data_sets.clinical_trials.TrialsQueryConfig.from_toml": {"tf": 1}, "debeir.data_sets.marco.MarcoQueryConfig.from_toml": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}, "debeir.interfaces.config.Config.from_toml": {"tf": 1}, "debeir.interfaces.config.GenericConfig.from_toml": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1.4142135623730951}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 13, "s": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}}, "df": 2}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.DatasetTypes": {"tf": 1}, "debeir.interfaces.config.MetricsConfig.validate": {"tf": 1}, "debeir.training.hparm_tuning.config.HparamConfig.parse_config_to_py": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document.set": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1.4142135623730951}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 8, "d": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.4142135623730951}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.run_automatic_adjustment": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1.4142135623730951}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1.4142135623730951}, "debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.7320508075688772}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1.4142135623730951}}, "df": 12}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.transformer_sent_encoder.Encoder.encode": {"tf": 1.4142135623730951}}, "df": 3}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"debeir.evaluation.evaluator.Evaluator.evaluate_runs": {"tf": 1}, "debeir.evaluation.residual_scoring.ResidualEvaluator.evaluate_runs": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.4142135623730951}, "debeir.interfaces.config.ElasticsearchConfig.validate": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.interfaces.document.Document.flatten_facets": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.utils": {"tf": 1}}, "df": 1}}}}}}}}}, "w": {"docs": {"debeir.utils": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1.4142135623730951}, "debeir.evaluation.cross_validation.CrossValidator.get_fold": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}}, "df": 6}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.interfaces.document.Document.get_trec_format": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_query": {"tf": 1}, "debeir.interfaces.parser.JsonLinesParser": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 11}}}}, "n": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 6}, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1.7320508075688772}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 6, "s": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"debeir.data_sets.factory.apply_nir_config": {"tf": 1}, "debeir.data_sets.marco.MarcoElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.data_sets.types.InputExample": {"tf": 1}, "debeir.data_sets.types.InputExample.__init__": {"tf": 1}, "debeir.data_sets.types.RelevanceExample.__init__": {"tf": 1}, "debeir.data_sets.utils.CrossValidatorDataset.get_fold": {"tf": 1}, "debeir.interfaces.config.Config": {"tf": 1}, "debeir.interfaces.config.override_with_toml_config": {"tf": 1.4142135623730951}, "debeir.interfaces.document.Document": {"tf": 1}, "debeir.interfaces.executor.GenericElasticsearchExecutor.generate_embedding_query": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer": {"tf": 1.7320508075688772}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.__init__": {"tf": 1}, "debeir.interfaces.indexer.SemanticElasticsearchIndexer.run": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1}, "debeir.utils.utils.create_output_file": {"tf": 1}, "debeir.utils.utils.flatten": {"tf": 1.4142135623730951}}, "df": 17, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.factory.get_index_name": {"tf": 1}, "debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1}, "debeir.engines.elasticsearch.executor.ElasticsearchExecutor.run_all_queries": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_preamble": {"tf": 1}, "debeir.engines.elasticsearch.generate_script_score.generate_script": {"tf": 1}, "debeir.interfaces.config.GenericConfig": {"tf": 1}, "debeir.interfaces.query.Query": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.KMaxPool": {"tf": 1.4142135623730951}, "debeir.models.colbert.ResidualBlock": {"tf": 1.4142135623730951}, "debeir.models.colbert.ColBERT": {"tf": 1.4142135623730951}, "debeir.models.colbert.ComBERT": {"tf": 1.4142135623730951}, "debeir.rankers.reranking.reranker.ReRanker.rrerank": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1.4142135623730951}}, "df": 14}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir.evaluation": {"tf": 1}, "debeir.interfaces.document.Document.get_document_facet": {"tf": 1}, "debeir.interfaces.document.Document.set": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}}, "df": 5}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"debeir.training.train_reranker.train_cross_encoder_reranker": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_biencoder": {"tf": 1.4142135623730951}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.utils.get_scheduler_with_wandb": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.rankers.transformer_sent_encoder.Encoder": {"tf": 1}, "debeir.training.hparm_tuning.trainer.Trainer": {"tf": 1}}, "df": 2}, "d": {"docs": {"debeir.utils.utils.unpack_coroutine": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"debeir.data_sets.clinical_trials.TrialsElasticsearchQuery.get_id_mapping": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.get_id_mapping": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "h": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.engines.elasticsearch.change_bm25.change_bm25_params": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.utils.scaler.get_z_value": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"debeir.evaluation.cross_validation.CrossValidator": {"tf": 1}, "debeir.interfaces.converters.ParsedTopicsToDataset": {"tf": 1}, "debeir.training.train_sentence_encoder.train_huggingface_transformer": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.has_bm25_scores": {"tf": 1}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 1}, "debeir.models.colbert.KMaxPool": {"tf": 1}, "debeir.models.colbert.ResidualBlock": {"tf": 1}, "debeir.models.colbert.ColBERT": {"tf": 1}, "debeir.models.colbert.ComBERT": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 7}}, "s": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"debeir.models.colbert.ConvolutionalBlock.forward": {"tf": 1}, "debeir.models.colbert.KMaxPool.forward": {"tf": 1}, "debeir.models.colbert.ResidualBlock.forward": {"tf": 1}, "debeir.models.colbert.ColBERT.forward": {"tf": 1}, "debeir.models.colbert.ComBERT.forward": {"tf": 1}, "debeir.training.losses.contrastive.ContrastiveSentLoss.forward": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"debeir.rankers.reranking.nir": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.utils.scaler.unpack_elasticsearch_scores": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}}, "df": 1, "s": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"debeir.training.hparm_tuning.config.HparamConfig": {"tf": 1}, "debeir.training.hparm_tuning.optuna_rank.run_optuna_with_wandb": {"tf": 1}, "debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"debeir.training.hparm_tuning.trainer.SentenceTransformerHparamTrainer.get_optuna_hparams": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"debeir.training.losses.contrastive": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"debeir.training.losses.contrastive.SupConLoss": {"tf": 1}, "debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1}}, "df": 2}}}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {"debeir.training.losses.contrastive.ContrastiveSentLoss": {"tf": 1}}, "df": 1}}}}}}}}}}}, "x": {"docs": {"debeir.data_sets.utils.CrossValidatorDataset.prepare_cross_validator": {"tf": 1.7320508075688772}, "debeir.models.colbert.ConvolutionalBlock": {"tf": 2}, "debeir.models.colbert.KMaxPool": {"tf": 2}, "debeir.models.colbert.ResidualBlock": {"tf": 2}, "debeir.models.colbert.ColBERT": {"tf": 2}, "debeir.models.colbert.ComBERT": {"tf": 2}}, "df": 6, "m": {"docs": {}, "df": 0, "l": {"docs": {"debeir.data_sets.trec_covid.TrecCovidParser": {"tf": 1}, "debeir.interfaces.parser.XMLParser": {"tf": 1}}, "df": 2}}}, "j": {"docs": {"debeir.training.losses.contrastive.SupConLoss.forward": {"tf": 1.4142135623730951}}, "df": 1, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"debeir.engines.elasticsearch.generate_script_score.SourceBuilder.add_log_score": {"tf": 1}, "debeir.interfaces.parser.XMLParser.unwrap": {"tf": 1}, "debeir.models.colbert.CoLBERTConfig.load": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"debeir.interfaces.parser.JsonLinesParser": {"tf": 1}}, "df": 1}}}}}}}}}, "z": {"docs": {"debeir.interfaces.query.GenericElasticsearchQuery.set_bm25_scores": {"tf": 1}, "debeir.interfaces.query.GenericElasticsearchQuery.generate_query_embedding": {"tf": 1}, "debeir.rankers.reranking.nir.NIReRanker": {"tf": 1}, "debeir.utils.scaler.get_z_value": {"tf": 1}}, "df": 4}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();